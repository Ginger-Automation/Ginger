    <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ New Design 2018 - START -->
    <!--Background Colors-->
    <SolidColorBrush x:Key="$BackgroundColor_VeryDarkBlue" Color="#152B37" />
    <SolidColorBrush x:Key="$BackgroundColor_DarkBlue" Color="#3E3E5D" />
    <SolidColorBrush x:Key="$BackgroundColor_Gray" Color="LightGray" />
    <SolidColorBrush x:Key="$BackgroundColor_LightGray" Color="#EDEFF5" />
    <SolidColorBrush x:Key="$BackgroundColor_White" Color="White" />

    <!--Selection Colors-->
    <SolidColorBrush x:Key="$SelectionColor_Pink" Color="#F26F6F" />
    <SolidColorBrush x:Key="$SelectionColor_LightBlue" Color="#3EA7FC" />

    <!--Highlight Colors-->
    <SolidColorBrush x:Key="$HighlightColor_Purple" Color="#D00D90" />
    <SolidColorBrush x:Key="$HighlightColor_Red" Color="#C21807"/>
    <SolidColorBrush x:Key="$HighlightColor_Orange" Color="#FF8C00"/>
    <SolidColorBrush x:Key="$HighlightColor_Yellow" Color="#EAB330" />
    
    <!--Execution Status Colors-->
    <SolidColorBrush x:Key="$PassedStatusColor" Color="#54A81B"/>
    <SolidColorBrush x:Key="$FailedStatusColor" Color="#E31123"/>
    <SolidColorBrush x:Key="$PendingStatusColor" Color="#FF8C00"/>
    <SolidColorBrush x:Key="$RunningStatusColor" Color="#3EA7FC"/>
    <SolidColorBrush x:Key="$StoppedStatusColor" Color="#ED5588"/>
    <SolidColorBrush x:Key="$SkippedStatusColor" Color="#737373"/>
    <SolidColorBrush x:Key="$BlockedStatusColor" Color="#A21025"/>


    <LinearGradientBrush x:Key="$amdocsLogoLinarGradientBrush"
		StartPoint="0,0" EndPoint="0.99,1" 
		SpreadMethod="Pad" ColorInterpolationMode="SRgbLinearInterpolation" >
        <GradientStop Color="#FFE68071" Offset="0" />
        <GradientStop Color="#FFCD3B82" Offset="1" />
    </LinearGradientBrush>

    <RadialGradientBrush x:Key="$amdocsLogoRadialGradientBrush"
		Center="0.5,0.5" GradientOrigin="0.5,0.5" RadiusX="0.5" RadiusY="0.5" 
		SpreadMethod="Pad" ColorInterpolationMode="SRgbLinearInterpolation" >
        <GradientStop Color="#FFCD3B82" Offset="0" />
        <GradientStop Color="#FFE68071" Offset="1" />
    </RadialGradientBrush>

    <Style TargetType="Label" x:Key="$MainHeaderLabelStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource $BackgroundColor_DarkBlue}" />
        <Setter Property="FontFamily" Value="Open Sans" />
        <Setter Property="FontSize" Value="25" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style TargetType="Label" x:Key="$SubHeaderLabelStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource $BackgroundColor_DarkBlue}" />
        <Setter Property="FontFamily" Value="Open Sans" />
        <Setter Property="FontSize" Value="12" />
    </Style>
    
    <Style TargetType="Label"  x:Key="$LabelStyle" >
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Margin" Value="-5,0,0,0"/>
        <Setter Property="Foreground" Value="{DynamicResource $BackgroundColor_DarkBlue}"/>
    </Style>

    <Style TargetType="Label"  x:Key="$HeaderStyle" >
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="-5,0,0,0"/>
        <Setter Property="Foreground" Value="{DynamicResource $BackgroundColor_DarkBlue}"/>
    </Style>

    <Style TargetType="Label" x:Key="$InputLabelStyle_NoFill">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource $BackgroundColor_DarkBlue}" />
        <Setter Property="FontFamily" Value="Open Sans" />
        <Setter Property="Height" Value="25" />
        <Setter Property="FontSize" Value="12" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBox" x:Key="$TextBoxStyle" >
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="{StaticResource $BackgroundColor_DarkBlue}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
        
    <Style TargetType="TextBlock"  x:Key="$TextBlockStyle" >
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{DynamicResource @DarkBlue}"/>
    </Style>

    <Style TargetType="Button" x:Key="$ImageButtonStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource $BackgroundColor_DarkBlue}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="Transparent" BorderThickness="1">
                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}" 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource $amdocsLogoLinarGradientBrush}" />
                            <Setter Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="$ImageButtonStyle_Disabled">
        <Setter Property="Foreground" Value="Gray" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="Transparent" BorderThickness="1">
                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}" 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource $amdocsLogoLinarGradientBrush}" />
                            <Setter Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="$ImageButtonStyle_Execution">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource $SelectionColor_LightBlue}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="Transparent" BorderThickness="1">
                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}" 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource $amdocsLogoLinarGradientBrush}" />
                            <Setter Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="$ImageButtonStyle_Menu">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource $BackgroundColor_LightGray}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="Transparent" BorderThickness="1">
                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}" 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource $amdocsLogoLinarGradientBrush}" />
                            <Setter Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="$RoundTextAndImageButtonStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource $BackgroundColor_DarkBlue}" />
        <Setter Property="FontFamily" Value="Open Sans" />
        <Setter Property="Height" Value="20" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Padding" Value="5,0,5,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{DynamicResource $BackgroundColor_DarkBlue}" BorderThickness="1" CornerRadius="15">
                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}" 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource $BackgroundColor_DarkBlue}" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Cursor" Value="Hand"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="$RoundTextAndImageButtonStyle_Disabled">
        <Setter Property="Foreground" Value="Gray" />
        <Setter Property="FontFamily" Value="Open Sans" />
        <Setter Property="Height" Value="20" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Padding" Value="5,0,5,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="Gray" BorderThickness="1" CornerRadius="15">
                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}" 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource $BackgroundColor_DarkBlue}" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Cursor" Value="Hand"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="$RoundTextAndImageButtonStyle_Execution">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource $SelectionColor_LightBlue}" />
        <Setter Property="FontFamily" Value="Open Sans" />
        <Setter Property="Height" Value="20" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Padding" Value="5,0,5,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{DynamicResource $SelectionColor_LightBlue}" BorderThickness="1" CornerRadius="15">
                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}" 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource $SelectionColor_LightBlue}" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Cursor" Value="Hand"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="$CircleImageButtonStyle_Disabled">

        <Setter Property="Foreground" Value="Gray" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding Foreground}" BorderThickness="1" CornerRadius="90">
                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}"                                 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource $amdocsLogoLinarGradientBrush}" />
                            <Setter Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="$CircleImageButtonStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource $BackgroundColor_DarkBlue}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding Foreground}" BorderThickness="1" CornerRadius="90">
                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}"                                 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource $amdocsLogoLinarGradientBrush}" />
                            <Setter Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="$CircleImageLightButtonStyle">
        <Setter Property="Background" Value="{DynamicResource $BackgroundColor_DarkBlue}"/>
        <Setter Property="Foreground" Value= "White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding Foreground}" BorderThickness="1" CornerRadius="90">
                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}"                                 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"                            
                                RecognizesAccessKey="True"/>
                    </Border>                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="$FlatComboBoxToggleButton" >
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="18" />
            </Grid.ColumnDefinitions>
            <Border 
                  Grid.Column="0"
                  Grid.ColumnSpan="2"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="Transparent" 
                  BorderBrush="{DynamicResource @Skin1_ColorA}"
                  BorderThickness="0,0,0,1" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="{StaticResource $SelectionColor_LightBlue}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
        </Grid>
    </ControlTemplate>

    <Style TargetType="ComboBox" x:Key="$FlatInputComboBoxStyle" >
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                                Name="ToggleButton" 
                                Template="{StaticResource $FlatComboBoxToggleButton}" 
                                Grid.Column="2" 
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"     
                                Margin="4,0,22,0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox" 
                                Style="{x:Null}" 
                                Template="{DynamicResource @ComboBoxTextBox}" 
                                HorizontalAlignment="Left" 
                                VerticalAlignment="Center" 
                                Margin="4,0,4,0"
                                Focusable="False"                                 
                                Foreground="{DynamicResource $BackgroundColor_DarkBlue}"
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True" 
                                Focusable="False"
                                PopupAnimation="Slide">
                            <Grid Name="DropDown"
                                    SnapsToDevicePixels="True"                
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                        x:Name="DropDownBorder"
                                        Background="White"
                                        BorderThickness="1"
                                        BorderBrush="{DynamicResource $BackgroundColor_DarkBlue}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property = "Foreground" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <Style TargetType="CheckBox" x:Key="$CeckBoxStyle" >
        <Setter Property="Foreground" Value="{StaticResource $BackgroundColor_DarkBlue}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource $BackgroundColor_DarkBlue}"/>
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <Style TargetType="MenuItem" x:Key="$MenuItemStyle">
        <Setter Property="BorderBrush" Value="{StaticResource $BackgroundColor_VeryDarkBlue}" />
        <Setter Property="Background" Value="{StaticResource $BackgroundColor_LightGray}" />
        <Setter Property="Foreground" Value="{StaticResource $BackgroundColor_VeryDarkBlue}" />
        <Style.Triggers>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource $SelectionColor_Pink}"/>
                <Setter Property="BorderBrush" Value="{StaticResource $SelectionColor_Pink}"/>
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource $SelectionColor_Pink}"/>
                <Setter Property="BorderBrush" Value="{StaticResource $SelectionColor_Pink}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="MenuItem" x:Key="$MenuItemStyle_Main">
        <Setter Property="BorderBrush" Value="{StaticResource $BackgroundColor_VeryDarkBlue}" />
        <Setter Property="Background" Value="{StaticResource $BackgroundColor_VeryDarkBlue}" />
        <Setter Property="Foreground" Value="{StaticResource $BackgroundColor_Gray}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource $SelectionColor_Pink}"/>
                <Setter Property="BorderBrush" Value="{StaticResource $SelectionColor_Pink}"/>
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource $SelectionColor_Pink}"/>
                <Setter Property="BorderBrush" Value="{StaticResource $SelectionColor_Pink}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="MenuItem" x:Key="$MenuItemStyle_ButtonMenu">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource $BackgroundColor_VeryDarkBlue}" />
        <Setter Property="Background" Value="{StaticResource $BackgroundColor_VeryDarkBlue}" />
        <Setter Property="Foreground" Value="{StaticResource $BackgroundColor_LightGray}" />
        <Setter Property="Height" Value="35" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <!--<Setter Property="Background" Value="{StaticResource $BackgroundColor_VeryDarkBlue}"/>-->
                <Setter Property="Foreground" Value="{StaticResource $amdocsLogoLinarGradientBrush}"/>
                <!--<Setter Property="BorderBrush" Value="{StaticResource $BackgroundColor_VeryDarkBlue}"/>-->
                <Setter Property="Cursor" Value="Hand"></Setter>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <!--<Setter Property="Background" Value="{StaticResource $BackgroundColor_VeryDarkBlue}"/>-->
                <Setter Property="Foreground" Value="{StaticResource $amdocsLogoLinarGradientBrush}"/>
                <!--<Setter Property="BorderBrush" Value="{StaticResource $BackgroundColor_VeryDarkBlue}"/>-->
                <Setter Property="Cursor" Value="Hand"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="MenuItem" x:Key="$MenuItemStyle_ButtonMenuItem">
        <Setter Property="BorderBrush" Value="{StaticResource $BackgroundColor_Gray}" />
        <Setter Property="Background" Value="{StaticResource $BackgroundColor_VeryDarkBlue}" />
        <Setter Property="Foreground" Value="{StaticResource $BackgroundColor_Gray}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Height" Value="30" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource $SelectionColor_Pink}"/>
                <Setter Property="BorderBrush" Value="{StaticResource $SelectionColor_Pink}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Cursor" Value="Hand"></Setter>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource $SelectionColor_Pink}"/>
                <Setter Property="BorderBrush" Value="{StaticResource $SelectionColor_Pink}"/>
                <Setter Property="Cursor" Value="Hand"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="MenuItem" x:Key="$MenuItemStyle_ButtonSubMenuItem">
        <Setter Property="BorderBrush" Value="{StaticResource $BackgroundColor_VeryDarkBlue}" />
        <Setter Property="Background" Value="{StaticResource $BackgroundColor_White}" />
        <Setter Property="Foreground" Value="{StaticResource $BackgroundColor_VeryDarkBlue}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Height" Value="25" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource $SelectionColor_Pink}"/>
                <Setter Property="BorderBrush" Value="{StaticResource $SelectionColor_Pink}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Cursor" Value="Hand"></Setter>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource $SelectionColor_Pink}"/>
                <Setter Property="BorderBrush" Value="{StaticResource $SelectionColor_Pink}"/>
                <Setter Property="Cursor" Value="Hand"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
        
    <Style TargetType="Label" x:Key="$ucGridTitleLightStyle">
        <Setter Property="Foreground" Value="{DynamicResource $BackgroundColor_DarkBlue}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="{DynamicResource $BackgroundColor_LightGray}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
        
    <Style TargetType="RibbonTabHeader" x:Key="$RibbonTabHeaderStyle">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Open Sans" />
        <Setter Property="FontSize" Value="1" />
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="{StaticResource $BackgroundColor_DarkBlue}" />
        <Setter Property="Padding" Value="0,0,0,0" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Height" Value="1" />
        <Setter Property="Visibility" Value="Collapsed" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RibbonTabHeader">
                    <ControlTemplate.Resources>
                        <SolidColorBrush x:Key="BackgroundColor" Color="White" />
                    </ControlTemplate.Resources>
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
						        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" 
							    ContentSource="{Binding Label}" RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsRibbonTabSelected" Value="True">
                            <Setter Property="Background" Value="White" />
                            <Setter Property="BorderBrush" Value="White" />
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsRibbonTabSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="White" />
                            <Setter Property="BorderBrush" Value="White" />
                            <Setter Property="Foreground" Value="White" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="RibbonGroup" x:Key="$RibbonGroupStyle">
        <Setter Property="Background" Value="White" />
    </Style>

    <Style TargetType="ListViewItem" x:Key="$TopListViewItemStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource $BackgroundColor_Gray}" />
        <Setter Property="FontFamily" Value="Open Sans" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Margin" Value="25,0,0,0" />
        <Setter Property="Padding" Value="0,0,0,0" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Name="Border" BorderThickness="0 0 0 3" >
                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}" 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource $SelectionColor_Pink}" />
                            <Setter Property="Cursor" Value="Hand"></Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource $amdocsLogoLinarGradientBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource $BackgroundColor_White}" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Label" x:Key="$MainListViewItemLabelStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="DarkGray" />
        <Setter Property="FontFamily" Value="Open Sans" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="0,0,0,0" />
    </Style>

    <Style TargetType="Label" x:Key="$SubListViewItemLabelStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Gray" />
        <Setter Property="FontFamily" Value="Open Sans" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Margin" Value="0,0,0,0" />
    </Style>

    <Style TargetType="ListViewItem" x:Key="$ListViewItemUnderlineStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Gray" />
        <Setter Property="FontFamily" Value="Open Sans" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Margin" Value="25,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Name="Border" BorderThickness="0 0 0 4" >
                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}" 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource $amdocsLogoLinarGradientBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource $BackgroundColor_DarkBlue}" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource $BackgroundColor_DarkBlue}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter  TargetName="Border"  Property="BorderBrush" Value="{DynamicResource $amdocsLogoLinarGradientBrush}" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="Foreground" Value="{DynamicResource $BackgroundColor_DarkBlue}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ListViewItem" x:Key="$ListViewItemBorderStyle">
        <Setter Property="Margin" Value="0 0 0 5"/>
        <Setter Property="Width" Value="515"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Name="Border" >
                        <ContentPresenter                                 
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="false">
                            <Setter  TargetName="Border"  Property="BorderBrush" Value="{StaticResource $BackgroundColor_DarkBlue}" />
                            <Setter  TargetName="Border"  Property="BorderThickness" Value="1" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter  TargetName="Border"  Property="BorderBrush" Value="{DynamicResource $amdocsLogoLinarGradientBrush}" />
                            <Setter  TargetName="Border"  Property="BorderThickness" Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TreeViewItem}" x:Key="$TreeViewItemStyle_TrioBackground">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="Green"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--<Style TargetType="{x:Type MenuItem}" x:Key="$MenuItemStyle2">
        <Setter Property="Background"
                Value="{StaticResource $BackgroundColor_LightGray}"></Setter>
        <Setter Property="Foreground"
                Value="{StaticResource $BackgroundColor_DarkBlue}"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource $BackgroundColor_DarkBlue}"></Setter>
        <Style.Triggers>
            <Trigger Property="Role" Value="SubmenuItem">

            </Trigger>
            <Trigger Property="IsHighlighted"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource $HighlightColor_Purple}"></Setter>
                <Setter Property="Foreground" Value="{DynamicResource $SelectionColor_Pink}"></Setter>
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource $HighlightColor_Purple}"></Setter>
                <Setter Property="Foreground" Value="{DynamicResource $SelectionColor_Pink}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <Style TargetType="TabItem" x:Key="$CoolTab">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <ControlTemplate.Resources>
                        <SolidColorBrush x:Key="MouseOverBackground" Color="#DFE9F5" />
                    </ControlTemplate.Resources>
                    <Border Name="Border" BorderThickness="0 0 1 0" Background="{StaticResource $BackgroundColor_LightGray}" BorderBrush="{StaticResource $SelectionColor_Pink}">
                        <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="50,2" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{DynamicResource $BackgroundColor_DarkBlue}"/>
                            <Setter TargetName="Border" Property="VerticalAlignment"  Value="Top" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="FontWeight" Value="Normal"/>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="{DynamicResource $BackgroundColor_DarkBlue}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="ListBoxItem" x:Key="$BorderlessList">
        <!-- override the default template to remove the default styling on the IsSelected property -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="border" BorderBrush="Transparent" BorderThickness="1">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="BorderBrush" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="Transparent"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="$WindowButtonStyle">
        <Setter Property="BorderBrush" Value="{StaticResource $BackgroundColor_VeryDarkBlue}" />
        <Setter Property="Background" Value="{StaticResource $BackgroundColor_VeryDarkBlue}" />
        <Setter Property="Foreground" Value="{StaticResource $BackgroundColor_White}" />
        <Setter Property="FontFamily" Value="Open Sans" />
        <Setter Property="Height" Value="25" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Padding" Value="25,0,25,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}" 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource $SelectionColor_Pink}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="$InputButtonStyle">
        <Setter Property="Background" Value="{StaticResource $BackgroundColor_LightGray}" />
        <Setter Property="Foreground" Value="{StaticResource $BackgroundColor_DarkBlue}" />
        <Setter Property="FontFamily" Value="Open Sans" />
        <Setter Property="Height" Value="25" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="2,0,0,2" />
        <Setter Property="Padding" Value="5,0,5,0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{DynamicResource $BackgroundColor_DarkBlue}" BorderThickness="1">
                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}" 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource $SelectionColor_Pink}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ New Design 2018 -END -->




    <!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% OLD Design Styles whatever is needed need to go up to new design section, rest needs to be deleted %%%% -->



    <!-- Styles Definition-->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Width" Value="75" />
        <Setter Property="Margin" Value="3.5" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <Style x:Key="@GridCellCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Height" Value="20" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource MyFocusVisualStyte}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator>
                        <BulletDecorator.Bullet>
                            <Grid Height="{TemplateBinding Height}" Width="{Binding RelativeSource={RelativeSource Self}, Path=Height, UpdateSourceTrigger=PropertyChanged}"
                              MinHeight="20" MinWidth="20" ShowGridLines="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="4*" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="4*" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="2*" />
                                    <ColumnDefinition Width="2*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="3*" />
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="4*" />
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="4*" />
                                </Grid.RowDefinitions>

                                <Border Name="MainBorder"
                                    Grid.ColumnSpan="9" Grid.RowSpan="9"
                                    CornerRadius="4"
                                    BorderThickness="1"
                                    Background="Transparent" />

                                <Border Name="InnerBorder"
                                    Grid.Column="1" Grid.ColumnSpan="5"
                                    Grid.Row="2" Grid.RowSpan="5"
                                    BorderThickness="1"
                                    BorderBrush="{DynamicResource @Skin1_ColorA}" />

                                <Path Name="InnerPath"
                                  Grid.Column="1" Grid.ColumnSpan="5"
                                  Grid.Row="2" Grid.RowSpan="5"
                                  Data="M31,5 L19.5,5 19.5,19.5 34.5,19.5 34.5,11.75"
                                  Stretch="Fill" Stroke="{DynamicResource @Skin1_ColorA}"/>

                                <Path Name="CheckMark"
                                  Grid.Column="2" Grid.ColumnSpan="5"
                                  Grid.Row="1" Grid.RowSpan="5"
                                  Opacity="0"
                                  Data="M9.07743946676476E-09,4.31805768640244L4.68740335877841,8.86361158398516C4.68740335877841,8.86361158398516,16.3281249985376,-2.42451336648723,16.3281249985376,-2.42451336648723L14.0622100581796,-4.77304938341948 4.68740335877846,4.31805791992662 2.22656251699567,1.93164208562579z"
                                  Fill="#3babe3"
                                  Stretch="Fill"
                                  Stroke="{DynamicResource @Skin1_ColorA}" />

                                <Path Name="InderminateMark"
                                  Grid.Column="3"
                                  Grid.Row="4"
                                  Data="M0,4 L1,5 5,1 4,0"
                                  Opacity="0"
                                  Stretch="Fill"
                                  StrokeThickness="0"
                                  Fill="{DynamicResource @Skin1_ColorA}" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="CheckMark" Duration="0:0:0.2" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" >
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="CheckMark" Duration="0:0:0.2" To="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="InderminateMark" Duration="0:0:0.2" To="1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter Margin="4,0,4,0"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        RecognizesAccessKey="True" />
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="InnerBorder" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource @Skin1_ColorA}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="CheckMark" Property="Fill" Value="Gray" />
                            <Setter TargetName="CheckMark" Property="Stroke" Value="Gray" />
                            <Setter TargetName="InnerPath" Property="Stroke" Value="Gray" />
                            <Setter TargetName="InderminateMark" Property="Fill" Value="Gray" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="Gray" />
                            <Setter TargetName="InnerBorder" Property="Background" Value="#C4C4C4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style x:Key="MyFocusVisualStyte" >
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle x:Name="FocusStyle" StrokeDashArray="4 4" RadiusX="5" RadiusY="5" Fill="Transparent"
                           Stroke="#81d2eb" StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Label" x:Key="GridTitle" >
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="LightBlue"/>
    </Style>

    <Style TargetType="Label" x:Key="ForField" >
        <Setter Property="Foreground" Value="Blue"/>
        <Setter Property="Background" Value="LightBlue"/>
    </Style>

    <Style TargetType="GridSplitter" x:Key="StyleSplitter" >
        
        <Setter Property="Width" Value="10"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FF727070" Offset="0.981"/>
                    <GradientStop Color="#FFDCCFCF" Offset="0.312"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="DarkGray"/>
    </Style>

    <Style TargetType="DockPanel" x:Key="DataGridDockPanel" >
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="1"/>
                    <GradientStop Color="#FF636363"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <!---->
        <Style TargetType="Label" x:Key="DataGridTitle" >
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="LightSkyBlue"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>

        <Style TargetType="DataGridColumnHeader" x:Key="DataGridColumnHeader" >
            <Setter Property="Height" Value="20" />
            <Setter Property="Background" Value="Gray"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontWeight"  Value="Bold"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0.8"/>
            <Setter Property="BorderBrush" Value="Black"/>
        </Style>

        <Style TargetType="DataGridRow" x:Key="DataGridRowStyle">
            <Setter Property="Background" Value="White" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="DeepSkyBlue"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
                
        <Style TargetType="DataGridCell" x:Key="DataGridCellStyle" >
           
    <Style.Triggers>
        <Trigger Property="IsSelected" Value="True">
            <Setter Property="Background" Value="DeepSkyBlue"/>
            <Setter Property="Foreground" Value="White"/>
        </Trigger>
    </Style.Triggers>
    </Style>

    <Style TargetType="DataGrid" x:Key="DataGridAlternatingRowBackground" >
        <Setter Property="AlternatingRowBackground" Value="#FFD9F3F9"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="DataGridCellButtonStyle">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{DynamicResource @Skin1_ColorC}" />
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}" />
        <Setter Property="FontFamily" Value="Open Sans" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{DynamicResource @Skin1_ColorA}" BorderThickness="1">
                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}" 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="{DynamicResource @Skin1_ColorA}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Gray" />
                            <Setter Property="BorderBrush" Value="Gray" />
                            <Setter Property="Background" Value="{DynamicResource @Skin1_ColorC}" />
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TODO: find why this is not working - put images in sepearte dictionary-->
    <!--<ResourceDictionary x:Key="dicImages" Source="Images/_Images.xaml" />-->

    <!--16x16 Images-->
    <ImageSource x:Key="TBD16x16">pack://application:,,,/Ginger;component/Images/TBD16x16.png</ImageSource>
    <ImageSource x:Key="Up16x16">pack://application:,,,/Ginger;component/Images/up16x16.png</ImageSource>
    <ImageSource x:Key="Down16x16">pack://application:,,,/Ginger;component/Images/down16x16.png</ImageSource>
    <ImageSource x:Key="Add16x16">pack://application:,,,/Ginger;component/Images/add16x16.png</ImageSource>
    <ImageSource x:Key="Delete16x16">pack://application:,,,/Ginger;component/Images/Delete16x16.png</ImageSource>
    <ImageSource x:Key="Refresh16x16">pack://application:,,,/Ginger;component/Images/Refresh16x16.png</ImageSource>
    <ImageSource x:Key="ClearAll16x16">pack://application:,,,/Ginger;component/Images/Trash16x16.png</ImageSource>
    <ImageSource x:Key="Edit16x16">pack://application:,,,/Ginger;component/Images/Edit16x16.png</ImageSource>
    <ImageSource x:Key="ClearSearch16x16">pack://application:,,,/Ginger;component/Images/x16x16.png</ImageSource>
    <ImageSource x:Key="Save16x16">pack://application:,,,/Ginger;component/Images/Save16x16.png</ImageSource>
    <ImageSource x:Key="X16x16">pack://application:,,,/Ginger;component/Images/X16x16.png</ImageSource>
    <ImageSource x:Key="Lens16x16">pack://application:,,,/Ginger;component/Images/Lens16x16.png</ImageSource>
    <ImageSource x:Key="Undo16x16">pack://application:,,,/Ginger;component/Images/Undo16x16.png</ImageSource>
    <ImageSource x:Key="Error16x16">pack://application:,,,/Ginger;component/Images/Error16x16.png</ImageSource>
    <ImageSource x:Key="Load16x16">pack://application:,,,/Ginger;component/Images/Load16x16.png</ImageSource>
    <ImageSource x:Key="Console16x16">pack://application:,,,/Ginger;component/Images/console16x16.png</ImageSource>
    <ImageSource x:Key="ASCF16x16">pack://application:,,,/Ginger;component/Images/ASCF16x16.png</ImageSource>

    <!--32x32 Images-->
    <ImageSource x:Key="TBD32x32">pack://application:,,,/Ginger;component/Images/tbd32x32.png</ImageSource>
    <ImageSource x:Key="@AddRunSetALMAction_16x16">pack://application:,,,/Ginger;component/Images/@AddRunSetALMAction_16x16.png</ImageSource>
    <ImageSource x:Key="@AddDefectsToALM_16x16">pack://application:,,,/Ginger;component/Images/@AddDefectsToALM_16x16.png</ImageSource>
    <ImageSource x:Key="@ExportExecutionResultsToALM_32x32">pack://application:,,,/Ginger;component/Images/@ExportExecutionResultsToALM_32x32.png</ImageSource>
    <ImageSource x:Key="@ExportExecutionResultsToALM_16x16">pack://application:,,,/Ginger;component/Images/@ExportExecutionResultsToALM_16x16.png</ImageSource>
    <ImageSource x:Key="@ExportToALM_16x16">pack://application:,,,/Ginger;component/Images/@ExportToALM_16x16.png</ImageSource>
    <ImageSource x:Key="@ExportToALM_32x32">pack://application:,,,/Ginger;component/Images/@ExportToALM_32x32.png</ImageSource>
    <ImageSource x:Key="@ImportFromALM_32x32">pack://application:,,,/Ginger;component/Images/@ImportFromALM_32x32.png</ImageSource>
    <ImageSource x:Key="@RefreshALM_16x16">pack://application:,,,/Ginger;component/Images/@RefreshALM_16x16.png</ImageSource>
    <ImageSource x:Key="@RefreshALM_32x32">pack://application:,,,/Ginger;component/Images/@RefreshALM_32x32.png</ImageSource>
    
    <ImageSource x:Key="News32x32">pack://application:,,,/Ginger;component/Images/News32x32.png</ImageSource>
    <ImageSource x:Key="Actions32x32">pack://application:,,,/Ginger;component/Images/Actions32x32.png</ImageSource>
    <ImageSource x:Key="Variables32x32">pack://application:,,,/Ginger;component/Images/Variables32x32.png</ImageSource>
    <ImageSource x:Key="Start32x32">pack://application:,,,/Ginger;component/Images/Start32x32.png</ImageSource>
    <ImageSource x:Key="Add32x32">pack://application:,,,/Ginger;component/Images/Add32x32.png</ImageSource>
    <ImageSource x:Key="Record32x32">pack://application:,,,/Ginger;component/Images/Record32x32.png</ImageSource>
    <ImageSource x:Key="Record16x16">pack://application:,,,/Ginger;component/Images/Record16x16.png</ImageSource>
    <ImageSource x:Key="Pin32x32">pack://application:,,,/Ginger;component/Images/Pin32x32.png</ImageSource>
    <ImageSource x:Key="Pin16x16">pack://application:,,,/Ginger;component/Images/Pin16x16.png</ImageSource>
    <ImageSource x:Key="Camera32x32">pack://application:,,,/Ginger;component/Images/Camera32x32.png</ImageSource>
    <ImageSource x:Key="Camera16x16">pack://application:,,,/Ginger;component/Images/Camera16x16.png</ImageSource>
    <ImageSource x:Key="eMenu32x32">pack://application:,,,/Ginger;component/Images/eMenu32x32.png</ImageSource>
    <ImageSource x:Key="eMenu16x16">pack://application:,,,/Ginger;component/Images/eMenu16x16.png</ImageSource>
    <ImageSource x:Key="Marker32x32">pack://application:,,,/Ginger;component/Images/Marker32x32.png</ImageSource>
    <ImageSource x:Key="Marker16x16">pack://application:,,,/Ginger;component/Images/Marker16x16.png</ImageSource>
    <ImageSource x:Key="CreateShortcut32x32">pack://application:,,,/Ginger;component/Images/CreateShortcut32x32.png</ImageSource>
    <ImageSource x:Key="tab16x16">pack://application:,,,/Ginger;component/Images/tab16x16.png</ImageSource>
    <ImageSource x:Key="RunAction32x32">pack://application:,,,/Ginger;component/Images/RunAction32x32.png</ImageSource>
    <ImageSource x:Key="RunActivity32x32">pack://application:,,,/Ginger;component/Images/RunActivity32x32.png</ImageSource>
    <ImageSource x:Key="RunFlow32x32">pack://application:,,,/Ginger;component/Images/RunFlow32x32.png</ImageSource>
    <ImageSource x:Key="RunCycles32x32">pack://application:,,,/Ginger;component/Images/RunCycles32x32.png</ImageSource>
    <ImageSource x:Key="Agent32x32">pack://application:,,,/Ginger;component/Images/Agent32x32.png</ImageSource>
    <ImageSource x:Key="Variable32x32">pack://application:,,,/Ginger;component/Images/Variable32x32.png</ImageSource>
    <ImageSource x:Key="Report32x32">pack://application:,,,/Ginger;component/Images/Report32x32.png</ImageSource>
    <ImageSource x:Key="Views32x32">pack://application:,,,/Ginger;component/Images/Views32x32.png</ImageSource>
    <ImageSource x:Key="Activities32x32">pack://application:,,,/Ginger;component/Images/Activities32x32.png</ImageSource>
    <ImageSource x:Key="Repository32x32">pack://application:,,,/Ginger;component/Images/Repository32x32.png</ImageSource>
    <ImageSource x:Key="Globe32x32">pack://application:,,,/Ginger;component/Images/Globe32x32.png</ImageSource>
    <ImageSource x:Key="Validation32x32">pack://application:,,,/Ginger;component/Images/Validation32x32.png</ImageSource>
    <ImageSource x:Key="Project32x32">pack://application:,,,/Ginger;component/Images/Project32x32.png</ImageSource>
    <ImageSource x:Key="ProjectExplorer32x32">pack://application:,,,/Ginger;component/Images/Workflow32x32.png</ImageSource>
    <ImageSource x:Key="NewSolution32x32">pack://application:,,,/Ginger;component/Images/NewSolution32x32.png</ImageSource>
    <ImageSource x:Key="Reset32x32">pack://application:,,,/Ginger;component/Images/Reset32x32.png</ImageSource>
    <ImageSource x:Key="NewTicket32x32">pack://application:,,,/Ginger;component/Images/NewTicket32x32.png</ImageSource>
    <ImageSource x:Key="Stop32x32">pack://application:,,,/Ginger;component/Images/Stop32x32.png</ImageSource>
    <ImageSource x:Key="PlatformConfig32x32">pack://application:,,,/Ginger;component/Images/PlatformConfig32x32.png</ImageSource>
    <ImageSource x:Key="Platform32x32">pack://application:,,,/Ginger;component/Images/Platform32x32.png</ImageSource>


    <ImageSource x:Key="Ginger_Logo">pack://application:,,,/Ginger;component/Images/Ginger_Logo.png</ImageSource>
    <ImageSource x:Key="BEAT_Logo">pack://application:,,,/Ginger;component/Images/BEAT_Logo.png</ImageSource>
    <ImageSource x:Key="BEAT_Logo_Small">pack://application:,,,/Ginger;component/Images/BEAT_Logo_Small.png</ImageSource>
    <ImageSource x:Key="Ginger_Icon">pack://application:,,,/Ginger;component/Images/Ginger_Icon.png</ImageSource>

    <ImageSource x:Key="Save32x32">pack://application:,,,/Ginger;component/Images/Save32x32.png</ImageSource>

    <ImageSource x:Key="About32x32">pack://application:,,,/Ginger;component/Images/About32x32.png</ImageSource>

    <Style x:Key="DragHeaderStyle" TargetType="{x:Type Control}">
        <Setter Property="BorderBrush" Value="Red"/>
    </Style>

    <Style x:Key="DropHeaderStyle" TargetType="{x:Type Separator}">
        <Setter Property="BorderBrush" Value="Red"/>
        <Setter Property="BorderThickness" Value="5"/>
    </Style>

    <!-- NEW Design ICONS/Images -->
    <ImageSource x:Key="@Save_16x16">pack://application:,,,/Ginger;component/Images/@Save_16x16.png</ImageSource>
    <ImageSource x:Key="@SaveAll_16x16">pack://application:,,,/Ginger;component/Images/@SaveAll_16x16.png</ImageSource>
    <ImageSource x:Key="@SaveAll_24x24">pack://application:,,,/Ginger;component/Images/@SaveAll_24x24.png</ImageSource>
    <ImageSource x:Key="@SaveAll_32x32">pack://application:,,,/Ginger;component/Images/@SaveAll_32x32.png</ImageSource>
    <ImageSource x:Key="@GetStarted_32x32">pack://application:,,,/Ginger;component/Images/@GetStarted_32x32.png</ImageSource>
    <ImageSource x:Key="@NewsTV_32x32">pack://application:,,,/Ginger;component/Images/@NewsTV_32x32.png</ImageSource>
    <ImageSource x:Key="@Add_32x32">pack://application:,,,/Ginger;component/Images/@Add_32x32.png</ImageSource>
    <ImageSource x:Key="@Delete_32x32">pack://application:,,,/Ginger;component/Images/@Delete_32x32.png</ImageSource>
    <ImageSource x:Key="@Duplicate_32x32">pack://application:,,,/Ginger;component/Images/@Duplicate_32x32.png</ImageSource>
    <ImageSource x:Key="@Open_32x32">pack://application:,,,/Ginger;component/Images/@Open_32x32.png</ImageSource>
    <ImageSource x:Key="@ViewFiles_32x32">pack://application:,,,/Ginger;component/Images/@ViewFiles_32x32.png</ImageSource>
    <ImageSource x:Key="@Add_16x16">pack://application:,,,/Ginger;component/Images/@Add_16x16.png</ImageSource>
    <ImageSource x:Key="@Clear_16x16">pack://application:,,,/Ginger;component/Images/@Clear_16x16.png</ImageSource>
    <ImageSource x:Key="@Delete_16x16">pack://application:,,,/Ginger;component/Images/@Delete_16x16.png</ImageSource>
    <ImageSource x:Key="@Edit_16x16">pack://application:,,,/Ginger;component/Images/@Edit_16x16.png</ImageSource>
    <ImageSource x:Key="@Refresh_16x16">pack://application:,,,/Ginger;component/Images/@Refresh_16x16.png</ImageSource>
    <ImageSource x:Key="@Share_16x16">pack://application:,,,/Ginger;component/Images/@Share_16x16.png</ImageSource>
    <ImageSource x:Key="@Pause_32x32">pack://application:,,,/Ginger;component/Images/@Pause_32x32.png</ImageSource>
    <ImageSource x:Key="@Documents_16x16">pack://application:,,,/Ginger;component/Images/@Documents_16x16.png</ImageSource>
    <ImageSource x:Key="@Environment_16x16">pack://application:,,,/Ginger;component/Images/@Environment_16x16.png</ImageSource>
    <ImageSource x:Key="@ExecutionRes_16x16">pack://application:,,,/Ginger;component/Images/@ExecutionRes_16x16.png</ImageSource>
    <ImageSource x:Key="@SharedRepository_16x16">pack://application:,,,/Ginger;component/Images/@SharedRepository_16x16.png</ImageSource>
    <ImageSource x:Key="@Solution_16x16">pack://application:,,,/Ginger;component/Images/@Solution_16x16.png</ImageSource>
    <ImageSource x:Key="@Agent_16x16">pack://application:,,,/Ginger;component/Images/@Agent_16x16.png</ImageSource>
    <ImageSource x:Key="@Run_16x16">pack://application:,,,/Ginger;component/Images/@Run_16x16.png</ImageSource>
    <ImageSource x:Key="@Folder_16x16">pack://application:,,,/Ginger;component/Images/@Folder_16x16.png</ImageSource>
    <ImageSource x:Key="@DataSource_16x16">pack://application:,,,/Ginger;component/Images/@DataSource_16x16.png</ImageSource>
    <ImageSource x:Key="@Upload_16x16">pack://application:,,,/Ginger;component/Images/@Upload_16x16.png</ImageSource>
    <ImageSource x:Key="@Download_16x16">pack://application:,,,/Ginger;component/Images/@Download_16x16.png</ImageSource>
    <ImageSource x:Key="@View_16x16">pack://application:,,,/Ginger;component/Images/@View_16x16.png</ImageSource>
    <ImageSource x:Key="@Window_16x16">pack://application:,,,/Ginger;component/Images/@Window_16x16.png</ImageSource>
    <ImageSource x:Key="@Trash_16x16">pack://application:,,,/Ginger;component/Images/@Trash_16x16.png</ImageSource>
    <ImageSource x:Key="@Connect_16x16">pack://application:,,,/Ginger;component/Images/@Connect_16x16.png</ImageSource>
    <ImageSource x:Key="@Activities_16x16">pack://application:,,,/Ginger;component/Images/@Activities_16x16.png</ImageSource>
    <ImageSource x:Key="@Flash_16x16">pack://application:,,,/Ginger;component/Images/@Flash_16x16.png</ImageSource>
    <ImageSource x:Key="@Glass_16x16">pack://application:,,,/Ginger;component/Images/@Glass_16x16.png</ImageSource>
    <ImageSource x:Key="@Variable_16x16">pack://application:,,,/Ginger;component/Images/@Variable_16x16.png</ImageSource>
    <ImageSource x:Key="@Automate_16x16">pack://application:,,,/Ginger;component/Images/@Automate_16x16.png</ImageSource>
    <ImageSource x:Key="@Glass_32x32">pack://application:,,,/Ginger;component/Images/@Glass_32x32.png</ImageSource>
    <ImageSource x:Key="@Refresh_32x32">pack://application:,,,/Ginger;component/Images/@Refresh_32x32.png</ImageSource>
    <ImageSource x:Key="@ImportScript_16x16">pack://application:,,,/Ginger;component/Images/@ImportScript_16x16.png</ImageSource>
    <ImageSource x:Key="@WorkFlow_16x16">pack://application:,,,/Ginger;component/Images/@WorkFlow_16x16.png</ImageSource>
    <ImageSource x:Key="@TestSet_16x16">pack://application:,,,/Ginger;component/Images/@TestSet_16x16.png</ImageSource>
    <ImageSource x:Key="@ArrowDown_16x16">pack://application:,,,/Ginger;component/Images/@ArrowDown_16x16.png</ImageSource>
    <ImageSource x:Key="@ArrowUp_16x16">pack://application:,,,/Ginger;component/Images/@ArrowUp_16x16.png</ImageSource>
    <ImageSource x:Key="@Undo_16x16">pack://application:,,,/Ginger;component/Images/@Undo_16x16.png</ImageSource>
    <ImageSource x:Key="@Redo_16x16">pack://application:,,,/Ginger;component/Images/@Undo_16x16.png</ImageSource>
    <ImageSource x:Key="@DisabledClear_16x16">pack://application:,,,/Ginger;component/Images/@DisabledClear_16x16.png</ImageSource>
    <ImageSource x:Key="@PinWhite_16x16">pack://application:,,,/Ginger;component/Images/@PinWhite_16x16.png</ImageSource>
    <ImageSource x:Key="@MaximizeWinWhite_16x16">pack://application:,,,/Ginger;component/Images/@MaximizeWinWhite_16x16.png</ImageSource>
    <ImageSource x:Key="@MinimizeWinWhite_16x16">pack://application:,,,/Ginger;component/Images/@MinimizeWinWhite_16x16.png</ImageSource>
    <ImageSource x:Key="@Upload_32x32">pack://application:,,,/Ginger;component/Images/@Upload_32x32.png</ImageSource>
    <ImageSource x:Key="@Download_32x32">pack://application:,,,/Ginger;component/Images/@Download_32x32.png</ImageSource>
    <ImageSource x:Key="@Clock_32x32">pack://application:,,,/Ginger;component/Images/@Clock_32x32.png</ImageSource>
    <ImageSource x:Key="@Connection_32x32">pack://application:,,,/Ginger;component/Images/@Connection_32x32.png</ImageSource>
    <ImageSource x:Key="@Lock_Yellow_10x10">pack://application:,,,/Ginger;component/Images/@Lock_Yellow_10x10.png</ImageSource>
    <ImageSource x:Key="@SourceControlItemAdded_10x10">pack://application:,,,/Ginger;component/Images/@SourceControlItemAdded_10x10.png</ImageSource>
    <ImageSource x:Key="@SourceControlItemChange_10x10">pack://application:,,,/Ginger;component/Images/@SourceControlItemChange_10x10.png</ImageSource>
    <ImageSource x:Key="@SourceControlItemDeleted_10x10">pack://application:,,,/Ginger;component/Images/@SourceControlItemDeleted_10x10.png</ImageSource>
    <ImageSource x:Key="@SourceControlItemUnchanged_10x10">pack://application:,,,/Ginger;component/Images/@SourceControlItemUnchanged_10x10.png</ImageSource>
    <ImageSource x:Key="@Lock_16x16">pack://application:,,,/Ginger;component/Images/@Lock_16x16.png</ImageSource>
    <ImageSource x:Key="@Lock_Red_16x16">pack://application:,,,/Ginger;component/Images/@Lock_Red_16x16.png</ImageSource>
    <ImageSource x:Key="@Lock_Red_10x10">pack://application:,,,/Ginger;component/Images/@Lock_Red_10x10.png</ImageSource>
    <ImageSource x:Key="@Unlock_16x16">pack://application:,,,/Ginger;component/Images/@Unlock_16x16.png</ImageSource>
    <ImageSource x:Key="@CheckIn_16x16">pack://application:,,,/Ginger;component/Images/@CheckIn_16x16.png</ImageSource>
    <ImageSource x:Key="@CheckIn_32x32">pack://application:,,,/Ginger;component/Images/@CheckIn_32x32.png</ImageSource>
    <ImageSource x:Key="@Play_32x32">pack://application:,,,/Ginger;component/Images/@Play_32x32.png</ImageSource>
    <ImageSource x:Key="@HelpMe_32x32">pack://application:,,,/Ginger;component/Images/@HelpMe_32x32.png</ImageSource>
    <ImageSource x:Key="@PlayAction_32x32">pack://application:,,,/Ginger;component/Images/@PlayAction_32x32.png</ImageSource>
    <ImageSource x:Key="@PlayCycle_32x32">pack://application:,,,/Ginger;component/Images/@PlayCycle_32x32.png</ImageSource>
    <ImageSource x:Key="@PlayFlow_32x32">pack://application:,,,/Ginger;component/Images/@PlayFlow_32x32.png</ImageSource>
    <ImageSource x:Key="@ContinueFlow_32x32">pack://application:,,,/Ginger;component/Images/@ContinueFlow_32x32.png</ImageSource>
    <ImageSource x:Key="@Stop_32x32">pack://application:,,,/Ginger;component/Images/@Stop_32x32.png</ImageSource>
    <ImageSource x:Key="@Save_32x32">pack://application:,,,/Ginger;component/Images/@Save_32x32.png</ImageSource>
    <ImageSource x:Key="@Action_32x32">pack://application:,,,/Ginger;component/Images/@Action_32x32.png</ImageSource>
    <ImageSource x:Key="@Agent_32x32">pack://application:,,,/Ginger;component/Images/@Agent_32x32.png</ImageSource>
    <ImageSource x:Key="@Report_32x32">pack://application:,,,/Ginger;component/Images/@Report_32x32.png</ImageSource>
    <ImageSource x:Key="@GridView_32x32">pack://application:,,,/Ginger;component/Images/@GridView_32x32.png</ImageSource>
    <ImageSource x:Key="@SplitView_32x32">pack://application:,,,/Ginger;component/Images/@SplitView_32x32.png</ImageSource>
    <ImageSource x:Key="@Config_32x32">pack://application:,,,/Ginger;component/Images/@Config_32x32.png</ImageSource>
    <ImageSource x:Key="@Split_16x16">pack://application:,,,/Ginger;component/Images/@Split_16x16.png</ImageSource>
    <ImageSource x:Key="@AddToRepository_16x16.png">pack://application:,,,/Ginger;component/Images/@AddToRepository_16x16.png</ImageSource>
    <ImageSource x:Key="@Variable_32x32.png">pack://application:,,,/Ginger;component/Images/@Variable_32x32.png</ImageSource>
    <ImageSource x:Key="@AddGinger_32x32.png">pack://application:,,,/Ginger;component/Images/@AddGinger_32x32.png</ImageSource>
    <ImageSource x:Key="@ViewGingers_32x32">pack://application:,,,/Ginger;component/Images/@ViewGingers_32x32.png</ImageSource>
    <ImageSource x:Key="@Undo_32x32.png">pack://application:,,,/Ginger;component/Images/@Undo_32x32.png</ImageSource>
    <ImageSource x:Key="@ClearAllGingers_32x32.png">pack://application:,,,/Ginger;component/Images/@ClearAllGingers_32x32.png</ImageSource>
    <ImageSource x:Key="@CreateShorCut_32x32.png">pack://application:,,,/Ginger;component/Images/@CreateShorCut_32x32.png</ImageSource>
    <ImageSource x:Key="@LeftArrow_16x16.png">pack://application:,,,/Ginger;component/Images/@LeftArrow_16x16.png</ImageSource>
    <ImageSource x:Key="@RightArrow_16x16.png">pack://application:,,,/Ginger;component/Images/@RightArrow_16x16.png</ImageSource>
    <ImageSource x:Key="@Close_16x16.png">pack://application:,,,/Ginger;component/Images/@Close_16x16.png</ImageSource>
    <ImageSource x:Key="@Config_16x16.png">pack://application:,,,/Ginger;component/Images/@Config_16x16.png</ImageSource>
    <ImageSource x:Key="@Config2_16x16.png">pack://application:,,,/Ginger;component/Images/@Config2_16x16.png</ImageSource>
    <ImageSource x:Key="@Config3_16x16.png">pack://application:,,,/Ginger;component/Images/@Config3_16x16.png</ImageSource>
    <ImageSource x:Key="@LeftArrow_32x32.png">pack://application:,,,/Ginger;component/Images/@LeftArrow_32x32.png</ImageSource>
    <ImageSource x:Key="@Ticket_32x32.png">pack://application:,,,/Ginger;component/Images/@Ticket_32x32.png</ImageSource>
    <ImageSource x:Key="@RoundArrowLeft_24x24.png">pack://application:,,,/Ginger;component/Images/@RoundArrowLeft_24x24.png</ImageSource>
    <ImageSource x:Key="@RoundRefresh_24x24.png">pack://application:,,,/Ginger;component/Images/@RoundRefresh_24x24.png</ImageSource>
    <ImageSource x:Key="@RoundRefresh_32x32.png">pack://application:,,,/Ginger;component/Images/@RoundRefresh_32x32.png</ImageSource>
    <ImageSource x:Key="@EMenu_32x32.png">pack://application:,,,/Ginger;component/Images/@EMenu_32x32.png</ImageSource>
    <ImageSource x:Key="@Pin_24x24.png">pack://application:,,,/Ginger;component/Images/@Pin_24x24.png</ImageSource>
    <ImageSource x:Key="@Pin_32x32.png">pack://application:,,,/Ginger;component/Images/@Pin_32x32.png</ImageSource>
    <ImageSource x:Key="@Record_32x32.png">pack://application:,,,/Ginger;component/Images/@Record_32x32.png</ImageSource>
    <ImageSource x:Key="@Camera_32x32.png">pack://application:,,,/Ginger;component/Images/@Camera_32x32.png</ImageSource>
    <ImageSource x:Key="@NoCamera_32x32.png">pack://application:,,,/Ginger;component/Images/@NoCamera_32x32.png</ImageSource>
    <ImageSource x:Key="@AddActivity_16x16.png">pack://application:,,,/Ginger;component/Images/@AddActivity_16x16.png</ImageSource>
    <ImageSource x:Key="@PlayAction_16x16.png">pack://application:,,,/Ginger;component/Images/@PlayAction_16x16.png</ImageSource>
    <ImageSource x:Key="@Marker_32x32.png">pack://application:,,,/Ginger;component/Images/@Marker_32x32.png</ImageSource>
    <ImageSource x:Key="@MagnifyingGlass_32x32.png">pack://application:,,,/Ginger;component/Images/@MagnifyingGlass_32x32.png</ImageSource>
    <ImageSource x:Key="@MagnifyingGlass_24x24.png">pack://application:,,,/Ginger;component/Images/@MagnifyingGlass_24x24.png</ImageSource>
    <ImageSource x:Key="@Config_24x24.png">pack://application:,,,/Ginger;component/Images/@Config_24x24.png</ImageSource>
    <ImageSource x:Key="@Record_24x24.png">pack://application:,,,/Ginger;component/Images/@Record_24x24.png</ImageSource>
    <ImageSource x:Key="@RecordOff_24x24.png">pack://application:,,,/Ginger;component/Images/@RecordOff_24x24.png</ImageSource>
    <ImageSource x:Key="@MobileBack_24x24.png">pack://application:,,,/Ginger;component/Images/@MobileBack_24x24.png</ImageSource>
    <ImageSource x:Key="@Target_24x24.png">pack://application:,,,/Ginger;component/Images/@Target_24x24.png</ImageSource>
    <ImageSource x:Key="@MobileMenu_24x24.png">pack://application:,,,/Ginger;component/Images/@MobileMenu_24x24.png</ImageSource>
    <ImageSource x:Key="@Circle_24x24.png">pack://application:,,,/Ginger;component/Images/@Circle_24x24.png</ImageSource>
    <ImageSource x:Key="@MobileDevice_32x32.png">pack://application:,,,/Ginger;component/Images/@MobileDevice_32x32.png</ImageSource>
    <ImageSource x:Key="@CloseWhite_16x16.png">pack://application:,,,/Ginger;component/Images/@CloseWhite_16x16.png</ImageSource>
    <ImageSource x:Key="@Grid_16x16.png">pack://application:,,,/Ginger;component/Images/@Grid_16x16.png</ImageSource>
    <ImageSource x:Key="@TreeView_16x16.png">pack://application:,,,/Ginger;component/Images/@TreeView_16x16.png</ImageSource>
    <ImageSource x:Key="@Grid_24x24.png">pack://application:,,,/Ginger;component/Images/@Grid_24x24.png</ImageSource>
    <ImageSource x:Key="@TreeView_24x24.png">pack://application:,,,/Ginger;component/Images/@TreeView_24x24.png</ImageSource>
    <ImageSource x:Key="@ViewAll_16x16.png">pack://application:,,,/Ginger;component/Images/@ViewAll_16x16.png</ImageSource>
    <ImageSource x:Key="@Info_24x24.png">pack://application:,,,/Ginger;component/Images/@Info_24x24.png</ImageSource>
    <ImageSource x:Key="@Info_16x16.png">pack://application:,,,/Ginger;component/Images/@Info_16x16.png</ImageSource>
    <ImageSource x:Key="@InfoWinBack_24x24.png">pack://application:,,,/Ginger;component/Images/@InfoWinBack_24x24.png</ImageSource>
    <ImageSource x:Key="@CheckAllTable_16x16.png">pack://application:,,,/Ginger;component/Images/@CheckAllTable_16x16.png</ImageSource>
    <ImageSource x:Key="@CheckAllRow_16x16.png">pack://application:,,,/Ginger;component/Images/@CheckAllRow_16x16.png</ImageSource>
    <ImageSource x:Key="@CheckAllColumn_16x16.png">pack://application:,,,/Ginger;component/Images/@CheckAllColumn_16x16.png</ImageSource>
    <ImageSource x:Key="@UnCheckAllTable_16x16.png">pack://application:,,,/Ginger;component/Images/@UnCheckAllTable_16x16.png</ImageSource>
    <ImageSource x:Key="@UnCheckAllRow_16x16.png">pack://application:,,,/Ginger;component/Images/@UnCheckAllRow_16x16.png</ImageSource>
    <ImageSource x:Key="@UnCheckAllColumn_16x16.png">pack://application:,,,/Ginger;component/Images/@UnCheckAllColumn_16x16.png</ImageSource>
    <ImageSource x:Key="@Dependency_16x16.png">pack://application:,,,/Ginger;component/Images/@Dependency_16x16.png</ImageSource>
    <ImageSource x:Key="@AutoEdit_16x16.png">pack://application:,,,/Ginger;component/Images/@AutoEdit_16x16.png</ImageSource>
    <ImageSource x:Key="@Duplicate_16x16.png">pack://application:,,,/Ginger;component/Images/@Duplicate_16x16.png</ImageSource>
    <ImageSource x:Key="@Reset_16x16.png">pack://application:,,,/Ginger;component/Images/@Reset_16x16.png</ImageSource>
    <ImageSource x:Key="@Group_16x16.png">pack://application:,,,/Ginger;component/Images/@Group_16x16.png</ImageSource>
    <ImageSource x:Key="@AidBug_32x32.png">pack://application:,,,/Ginger;component/Images/@AidBug_32x32.png</ImageSource>
    <ImageSource x:Key="@Stethoscope_32x32.png">pack://application:,,,/Ginger;component/Images/@Stethoscope_32x32.png</ImageSource>
    <ImageSource x:Key="@HorizentalScroller_16x16.png">pack://application:,,,/Ginger;component/Images/@HorizentalScroller_16x16.png</ImageSource>
    <ImageSource x:Key="@RoadSign_16x16.png">pack://application:,,,/Ginger;component/Images/@RoadSign_16x16.png</ImageSource>
    <ImageSource x:Key="@Handler_16x16.png">pack://application:,,,/Ginger;component/Images/@Handler_16x16.png</ImageSource>
    <ImageSource x:Key="@Import_32x32.png">pack://application:,,,/Ginger;component/Images/@Import_32x32.png</ImageSource>
    <ImageSource x:Key="@Grafh_16x16.png">pack://application:,,,/Ginger;component/Images/@Grafh_16x16.png</ImageSource>
    <ImageSource x:Key="@A_16x16.png">pack://application:,,,/Ginger;component/Images/@A_16x16.png</ImageSource>
    <ImageSource x:Key="@Run_24x24.png">pack://application:,,,/Ginger;component/Images/@Run_24x24.png</ImageSource>
    <ImageSource x:Key="@Close_24x24.png">pack://application:,,,/Ginger;component/Images/@Close_24x24.png</ImageSource>
    <ImageSource x:Key="@Report2_32x32.png">pack://application:,,,/Ginger;component/Images/@Report2_32x32.png</ImageSource>
    <ImageSource x:Key="@Report_16x16.png">pack://application:,,,/Ginger;component/Images/@Report_16x16.png</ImageSource>
    <ImageSource x:Key="@AgentsConfig_32x32.png">pack://application:,,,/Ginger;component/Images/@AgentsConfig_32x32.png</ImageSource>
    <ImageSource x:Key="@AgentsLaunch_32x32.png">pack://application:,,,/Ginger;component/Images/@AgentsLaunch_32x32.png</ImageSource>
    <ImageSource x:Key="@Target_32x32.png">pack://application:,,,/Ginger;component/Images/@Target_32x32.png</ImageSource>
    <ImageSource x:Key="@CloseWhite_20x20.png">pack://application:,,,/Ginger;component/Images/@CloseWhite_20x20.png</ImageSource>
    <ImageSource x:Key="@MaximaizeWin2_20x20.png">pack://application:,,,/Ginger;component/Images/@MaximaizeWin2_20x20.png</ImageSource>
    <ImageSource x:Key="@MinimaizWinWhite_20x20.png">pack://application:,,,/Ginger;component/Images/@MinimaizWinWhite_20x20.png</ImageSource>
    <ImageSource x:Key="@PinWhite_20x20.png">pack://application:,,,/Ginger;component/Images/@PinWhite_20x20.png</ImageSource>
    <ImageSource x:Key="@ShrinkWinWhite_20x20.png">pack://application:,,,/Ginger;component/Images/@ShrinkWinWhite_20x20.png</ImageSource>
    <ImageSource x:Key="@Run_20x20.png">pack://application:,,,/Ginger;component/Images/@Run_20x20.png</ImageSource>
    <ImageSource x:Key="@Close_20x20.png">pack://application:,,,/Ginger;component/Images/@Close_20x20.png</ImageSource>
    <ImageSource x:Key="@Config_20x20.png">pack://application:,,,/Ginger;component/Images/@Config_20x20.png</ImageSource>
    <ImageSource x:Key="@Video_16x16">pack://application:,,,/Ginger;component/Images/@Video_16x16.png</ImageSource>
    <ImageSource x:Key="@WebFile_16x16">pack://application:,,,/Ginger;component/Images/@WebFile_16x16.png</ImageSource>
    <ImageSource x:Key="@Plugin_32x32">pack://application:,,,/Ginger;component/Images/@Plugin_32x32.png</ImageSource>
    <ImageSource x:Key="@PlatformAction_24x24">pack://application:,,,/Ginger;component/Images/@PlatformAction_24x24.png</ImageSource>
    <ImageSource x:Key="@GeneralAction_24x24">pack://application:,,,/Ginger;component/Images/@GeneralAction_24x24.png</ImageSource>
    <ImageSource x:Key="@PluginAction_24x24">pack://application:,,,/Ginger;component/Images/@PluginAction_24x24.png</ImageSource>

    <ImageSource x:Key="@GingerLogo">pack://application:,,,/Ginger;component/Images/@GingerLogo.png</ImageSource>
    <ImageSource x:Key="@GingerHelper_Close">pack://application:,,,/Ginger;component/Images/@GingerHelper_Close.png</ImageSource>
    <ImageSource x:Key="@GingerHelper_Cog">pack://application:,,,/Ginger;component/Images/@GingerHelper_Cog.png</ImageSource>
    
    <ImageSource x:Key="@GingerHelper_Ginger">pack://application:,,,/Ginger;component/Images/@GingerHelper_Ginger.png</ImageSource>
    <ImageSource x:Key="@GingerHelper_MsgBoard">pack://application:,,,/Ginger;component/Images/@GingerHelper_MsgBoard.png</ImageSource>
    <ImageSource x:Key="@NotAvailable_600x600">pack://application:,,,/Ginger;component/Images/@NotAvailable_600x600.png</ImageSource>
    <ImageSource x:Key="@PassIcon_Large.png">pack://application:,,,/Ginger;component/Images/@PassIcon_Large.png</ImageSource>
    <ImageSource x:Key="@FailIcon_Large.png">pack://application:,,,/Ginger;component/Images/@FailIcon_Large.png</ImageSource>
    <ImageSource x:Key="@PassIconWithBack_Large.png">pack://application:,,,/Ginger;component/Images/@PassIconWithBack_Large.png</ImageSource>
    <ImageSource x:Key="@FailIconWithBack_Large.png">pack://application:,,,/Ginger;component/Images/@FailIconWithBack_Large.png</ImageSource>
    <ImageSource x:Key="@WarnIconWithBack_Large.png">pack://application:,,,/Ginger;component/Images/@WarnIconWithBack_Large.png</ImageSource>
    <ImageSource x:Key="@WarnIcon_Large.png">pack://application:,,,/Ginger;component/Images/@WarnIcon_Large.png</ImageSource>
    <ImageSource x:Key="@BrokenFile_32x32">pack://application:,,,/Ginger;component/Images/@BrokenFile_32x32.png</ImageSource>
    <ImageSource x:Key="@AddScnearios_32x32">pack://application:,,,/Ginger;component/Images/@AddScnearios_32x32.png</ImageSource>
    <ImageSource x:Key="@CleanScenarios_32x32">pack://application:,,,/Ginger;component/Images/@CleanScenarios_32x32.png</ImageSource>
    <ImageSource x:Key="@BrokenFile_Orange_32x32">pack://application:,,,/Ginger;component/Images/@BrokenFile_Orange_32x32.png</ImageSource>
    <ImageSource x:Key="@BrokenFile_Orange_24x24">pack://application:,,,/Ginger;component/Images/@BrokenFile_Orange_24x24.png</ImageSource>
    <ImageSource x:Key="@FeatureFile_16X16">pack://application:,,,/Ginger;component/Images/@FeatureFile_16X16.png</ImageSource>
    <ImageSource x:Key="@FeatureFile_24x24">pack://application:,,,/Ginger;component/Images/@FeatureFile_24x24.png</ImageSource>
    <ImageSource x:Key="@FeatureFile_32x32">pack://application:,,,/Ginger;component/Images/@FeatureFile_32x32.png</ImageSource>
    <ImageSource x:Key="@ErrorOrange_16x16">pack://application:,,,/Ginger;component/Images/@ErrorOrange_16x16.png</ImageSource>
    <ImageSource x:Key="@ErrorRed_16x16">pack://application:,,,/Ginger;component/Images/@ErrorRed_16x16.png</ImageSource>
    <ImageSource x:Key="@ErrorYellow">pack://application:,,,/Ginger;component/Images/@ErrorYellow_16x16.png</ImageSource>
    <ImageSource x:Key="@Question_Large.png.png">pack://application:,,,/Ginger;component/Images/@Question_Large.png</ImageSource>
    <ImageSource x:Key="@AddMail_16x16.png">pack://application:,,,/Ginger;component/Images/@AddMail_16x16.png</ImageSource>
    <ImageSource x:Key="@AddMail2_16x16.png">pack://application:,,,/Ginger;component/Images/@AddMail_16x16.png</ImageSource>
    <ImageSource x:Key="@AddSave_16x16.png">pack://application:,,,/Ginger;component/Images/@AddSave_16x16.png</ImageSource>
    <ImageSource x:Key="@@AddShare_16x16.png">pack://application:,,,/Ginger;component/Images/@AddShare_16x16.png</ImageSource>
    <ImageSource x:Key="@AddSMS_16x16.png">pack://application:,,,/Ginger;component/Images/@AddSMS_16x16.png</ImageSource>
    <ImageSource x:Key="@RunAll_16x16.png">pack://application:,,,/Ginger;component/Images/@RunAll_16x16.png</ImageSource>
    <ImageSource x:Key="@StopRed_16x16">pack://application:,,,/Ginger;component/Images/@StopRed_16x16.png</ImageSource>
    <ImageSource x:Key="@FlashGreen_16x16">pack://application:,,,/Ginger;component/Images/@FlashGreen_16x16.png</ImageSource>
    <ImageSource x:Key="@RightArrowRed_16x16">pack://application:,,,/Ginger;component/Images/@RightArrowRed_16x16.png</ImageSource>
    <ImageSource x:Key="@PowerOff_16x16">pack://application:,,,/Ginger;component/Images/@PowerOff_16x16.png</ImageSource>
    <ImageSource x:Key="@Share_32x32">pack://application:,,,/Ginger;component/Images/@Share_32x32.png</ImageSource>
    <ImageSource x:Key="@ReportsConfig_32x32">pack://application:,,,/Ginger;component/Images/@ReportsConfig_32x32.png</ImageSource>
    <ImageSource x:Key="@MultiReport_16x16">pack://application:,,,/Ginger;component/Images/@MultiReport_16x16.png</ImageSource>
    <ImageSource x:Key="@Image_16x16">pack://application:,,,/Ginger;component/Images/@Image_16x16.png</ImageSource>
    <ImageSource x:Key="Analyzer_32x32">pack://application:,,,/Ginger;component/Images/Analyzer_32x32.png</ImageSource>
    <ImageSource x:Key="@Paste_16x16">pack://application:,,,/Ginger;component/Images/@Paste_16x16.png</ImageSource>
    <ImageSource x:Key="@Copy_16x16">pack://application:,,,/Ginger;component/Images/@Copy_16x16.png</ImageSource>
    <ImageSource x:Key="@Cut_16x16">pack://application:,,,/Ginger;component/Images/@Cut_16x16.png</ImageSource>
    <ImageSource x:Key="@Help_32x32">pack://application:,,,/Ginger;component/Images/@Help_32x32.png</ImageSource>
    <ImageSource x:Key="@Spy_24x24">pack://application:,,,/Ginger;component/Images/@Spy_24x24.png</ImageSource>
    <ImageSource x:Key="@Filter16x16">pack://application:,,,/Ginger;component/Images/@Filter16x16.png</ImageSource>
    <ImageSource x:Key="@Canvas16x16">pack://application:,,,/Ginger;component/Images/@Canvas16x16.png</ImageSource>
    <ImageSource x:Key="@AddToList_Gray_16x16">pack://application:,,,/Ginger;component/Images/@AddToList_Gray_16x16.png</ImageSource>
    <ImageSource x:Key="@Grid_Gray_24x24">pack://application:,,,/Ginger;component/Images/@Grid_Gray_24x24.png</ImageSource>
    <ImageSource x:Key="@RecordDisable_24x24">pack://application:,,,/Ginger;component/Images/@RecordDisable_24x24.png</ImageSource>
    <ImageSource x:Key="@WithoutSpyGray_24x24">pack://application:,,,/Ginger;component/Images/@WithoutSpyGray_24x24.png</ImageSource>
    <ImageSource x:Key="@RecordOff_Gray_24x24">pack://application:,,,/Ginger;component/Images/@RecordOff_Gray_24x24.png</ImageSource>
    <ImageSource x:Key="@Refresh_Gray_16x16">pack://application:,,,/Ginger;component/Images/@Refresh_Gray_16x16.png</ImageSource>
    <ImageSource x:Key="@RefreshWhite_Gray_24x24">pack://application:,,,/Ginger;component/Images/@RefreshWhite_Gray_24x24.png</ImageSource>
    <ImageSource x:Key="@Spy_Gray_24x24">pack://application:,,,/Ginger;component/Images/@Spy_Gray_24x24.png</ImageSource>
    <ImageSource x:Key="@TreeView_Gray_24x24">pack://application:,,,/Ginger;component/Images/@TreeView_Gray_24x24.png</ImageSource>
    <ImageSource x:Key="@WithoutSpyWhite_Gray_24x24">pack://application:,,,/Ginger;component/Images/@WithoutSpyWhite_Gray_24x24.png</ImageSource>
    <ImageSource x:Key="@Focuse_24x24">pack://application:,,,/Ginger;component/Images/@Focuse_24x24.png</ImageSource>
    <ImageSource x:Key="@AddToList_24x24">pack://application:,,,/Ginger;component/Images/@AddToList_24x24.png</ImageSource>
    <ImageSource x:Key="@RefreshWhite_24x24">pack://application:,,,/Ginger;component/Images/@RefreshWhite_24x24.png</ImageSource>
    <ImageSource x:Key="@AddToList_16x16">pack://application:,,,/Ginger;component/Images/@AddToList_16x16.png</ImageSource>
    <ImageSource x:Key="@AgentsConfig_16x16">pack://application:,,,/Ginger;component/Images/@AgentsConfig_16x16.png</ImageSource>
    <ImageSource x:Key="@SpyWhite_24x24">pack://application:,,,/Ginger;component/Images/@SpyWhite_24x24.png</ImageSource>
    <ImageSource x:Key="@NoSpyWhite_24x24">pack://application:,,,/Ginger;component/Images/@NoSpyWhite_24x24.png</ImageSource>
    <ImageSource x:Key="@WithSpyWhite_24x24">pack://application:,,,/Ginger;component/Images/@WithSpyWhite_24x24.png</ImageSource>
    <ImageSource x:Key="@WithoutSpyWhite_24x24">pack://application:,,,/Ginger;component/Images/@WithoutSpyWhite_24x24.png</ImageSource>
    <ImageSource x:Key="@Upgrade_16x16">pack://application:,,,/Ginger;component/Images/@Upgrade_16x16.png</ImageSource>
    <ImageSource x:Key="@Upgrade_32x32">pack://application:,,,/Ginger;component/Images/@Upgrade_32x32.png</ImageSource>
    <ImageSource x:Key="@Stop_20x20">pack://application:,,,/Ginger;component/Images/@Stop_20x20.png</ImageSource>
    <ImageSource x:Key="@RunAction_20x20">pack://application:,,,/Ginger;component/Images/@RunAction_20x20.png</ImageSource>
    <ImageSource x:Key="@ToggleON_16x16">pack://application:,,,/Ginger;component/Images/@ToggleON_16x16.png</ImageSource>
    <ImageSource x:Key="@ToggleOFF_16x16">pack://application:,,,/Ginger;component/Images/@ToggleOFF_16x16.png</ImageSource>
    <ImageSource x:Key="@ToggleMiddle_16x16">pack://application:,,,/Ginger;component/Images/@ToggleMiddle_16x16.png</ImageSource>
    <ImageSource x:Key="@Edit_20x20">pack://application:,,,/Ginger;component/Images/@Edit_20x20.png</ImageSource>
    <ImageSource x:Key="@Run2_20x20">pack://application:,,,/Ginger;component/Images/@Run2_20x20.png</ImageSource>
    <ImageSource x:Key="@AgentsLaunch_16x16">pack://application:,,,/Ginger;component/Images/@AgentsLaunch_16x16.png</ImageSource>
    <ImageSource x:Key="@AidBug_16x16">pack://application:,,,/Ginger;component/Images/@AidBug_16x16.png</ImageSource>
    <ImageSource x:Key="@Clock_16x16">pack://application:,,,/Ginger;component/Images/@Clock_16x16.png</ImageSource>
    <ImageSource x:Key="@CreateShorCut_16x16">pack://application:,,,/Ginger;component/Images/@CreateShorCut_16x16.png</ImageSource>
    <ImageSource x:Key="@GetStarted16x16">pack://application:,,,/Ginger;component/Images/@GetStarted16x16.png</ImageSource>
    <ImageSource x:Key="@Play_16x16">pack://application:,,,/Ginger;component/Images/@Play_16x16.png</ImageSource>
    <ImageSource x:Key="@NewsTV16x16">pack://application:,,,/Ginger;component/Images/@NewsTV16x16.png</ImageSource>
    <ImageSource x:Key="@Report_16x16">pack://application:,,,/Ginger;component/Images/@Report_16x16.png</ImageSource>
    <ImageSource x:Key="@Report2_16x16">pack://application:,,,/Ginger;component/Images/@Report2_16x16.png</ImageSource>
    <ImageSource x:Key="@ReportsConfig_16x16">pack://application:,,,/Ginger;component/Images/@ReportsConfig_16x16.png</ImageSource>
    <ImageSource x:Key="@Stethoscope_16x16">pack://application:,,,/Ginger;component/Images/@Stethoscope_16x16.png</ImageSource>
    <ImageSource x:Key="@Stop_16x16">pack://application:,,,/Ginger;component/Images/@Stop_16x16.png</ImageSource>
    <ImageSource x:Key="@ContinueFlow_16x16">pack://application:,,,/Ginger;component/Images/@ContinueFlow_16x16.png</ImageSource>
    <ImageSource x:Key="@AddGinger_16x16">pack://application:,,,/Ginger;component/Images/@AddGinger_16x16.png</ImageSource>
    <ImageSource x:Key="@Ticket_16x16">pack://application:,,,/Ginger;component/Images/@Ticket_16x16.png</ImageSource>
    <ImageSource x:Key="@Forum_16x16">pack://application:,,,/Ginger;component/Images/@Forum_16x16.png</ImageSource>
    <ImageSource x:Key="@Forum_32x32">pack://application:,,,/Ginger;component/Images/@Forum_32x32.png</ImageSource>
    <ImageSource x:Key="@Open_16x16">pack://application:,,,/Ginger;component/Images/@Open_16x16.png</ImageSource>
    <ImageSource x:Key="@GetLatest2_32x32">pack://application:,,,/Ginger;component/Images/@GetLatest2_32x32.png</ImageSource>
    <ImageSource x:Key="@CheckIn2_32x32">pack://application:,,,/Ginger;component/Images/@CheckIn2_32x32.png</ImageSource>
    <ImageSource x:Key="@GetLatest2_16x16">pack://application:,,,/Ginger;component/Images/@GetLatest2_16x16.png</ImageSource>
    <ImageSource x:Key="@CheckIn2_16x16">pack://application:,,,/Ginger;component/Images/@CheckIn2_16x16.png</ImageSource>
    <ImageSource x:Key="@ALM_16x16.png">pack://application:,,,/Ginger;component/Images/@ALM_16x16.png</ImageSource>
    <ImageSource x:Key="@ALM_24x24.png">pack://application:,,,/Ginger;component/Images/@ALM_24x24.png</ImageSource>
    <ImageSource x:Key="@ALM_32x32.png">pack://application:,,,/Ginger;component/Images/@ALM_32x32.png</ImageSource>
    <ImageSource x:Key="@ALM_128x128.png">pack://application:,,,/Ginger;component/Images/@ALM_128x128.png</ImageSource>
    <ImageSource x:Key="@XML_64x64.png">pack://application:,,,/Ginger;component/Images/@XML_64x64.png</ImageSource>
    <ImageSource x:Key="@XML_16x16.png">pack://application:,,,/Ginger;component/Images/@XML_16x16.png</ImageSource>
    <ImageSource x:Key="@XML_24x24.png">pack://application:,,,/Ginger;component/Images/@XML_24x24.png</ImageSource>
    <ImageSource x:Key="@XML_32x32.png">pack://application:,,,/Ginger;component/Images/@XML_32x32.png</ImageSource>
    <ImageSource x:Key="@CSV_16x16.png">pack://application:,,,/Ginger;component/Images/@CSV_16x16.png</ImageSource>
    <ImageSource x:Key="@TagClose_16X16.png">pack://application:,,,/Ginger;component/Images/@TagClose_16X16.png</ImageSource>

    <ImageSource x:Key="@StarBlue_16x16">pack://application:,,,/Ginger;component/Images/@StarBlue_16x16.png</ImageSource>
    <ImageSource x:Key="@UploadStar_16x16">pack://application:,,,/Ginger;component/Images/@UploadStar_16x16.png</ImageSource>

    <ImageSource x:Key="@LightRun_16x16">pack://application:,,,/Ginger;component/Images/@LightRun_16x16.png</ImageSource>
    <ImageSource x:Key="@LightRunFlow_16x16">pack://application:,,,/Ginger;component/Images/@LightRunFlow_16x16.png</ImageSource>
    <ImageSource x:Key="@RunAndReport_16x16">pack://application:,,,/Ginger;component/Images/@RunAndReport_16x16.png</ImageSource>
    
    <ImageSource x:Key="@StarGray_16x16">pack://application:,,,/Ginger;component/Images/@StarGray_16x16.png</ImageSource>
    <ImageSource x:Key="@StarGray_24x24">pack://application:,,,/Ginger;component/Images/@StarGray_24x24.png</ImageSource>
    <ImageSource x:Key="@Star_16x16">pack://application:,,,/Ginger;component/Images/@Star_16x16.png</ImageSource>
    <ImageSource x:Key="@Star_24x24">pack://application:,,,/Ginger;component/Images/@Star_24x24.png</ImageSource>

    <ImageSource x:Key="@DeLink_16x16">pack://application:,,,/Ginger;component/Images/@DeLink_16x16.png</ImageSource>
    
    
    <ImageSource x:Key="@Outputs_32x32.png">pack://application:,,,/Ginger;component/Images/@Outputs_32x32.png</ImageSource>

    <ImageSource x:Key="@Wheel_50x50">pack://application:,,,/Ginger;component/Images/@Wheel_50x50.png</ImageSource>
    <ImageSource x:Key="@Wheel2_50x50">pack://application:,,,/Ginger;component/Images/@Wheel2_50x50.png</ImageSource>

    <ImageSource x:Key="@AddFolder_64x64.png">pack://application:,,,/Ginger;component/Images/@AddFolder_64x64.png</ImageSource>
    <ImageSource x:Key="@AddFolder_16x16.png">pack://application:,,,/Ginger;component/Images/@AddFolder_16x16.png</ImageSource>
    <ImageSource x:Key="@AddFolder_24x24.png">pack://application:,,,/Ginger;component/Images/@AddFolder_24x24.png</ImageSource>
    <ImageSource x:Key="@AddFolder_32x32.png">pack://application:,,,/Ginger;component/Images/@AddFolder_32x32.png</ImageSource>

    <ImageSource x:Key="@Folder2_64x64.png">pack://application:,,,/Ginger;component/Images/@Folder2_64x64.png</ImageSource>
    <ImageSource x:Key="@Folder2_16x16.png">pack://application:,,,/Ginger;component/Images/@Folder2_16x16.png</ImageSource>
    <ImageSource x:Key="@Folder2_24x24.png">pack://application:,,,/Ginger;component/Images/@Folder2_24x24.png</ImageSource>
    <ImageSource x:Key="@Folder2_32x32.png">pack://application:,,,/Ginger;component/Images/@Folder2_32x32.png</ImageSource>

    <ImageSource x:Key="@Flow_64x64.png">pack://application:,,,/Ginger;component/Images/@Flow_64x64.png</ImageSource>
    <ImageSource x:Key="@Flow_16x16.png">pack://application:,,,/Ginger;component/Images/@Flow_16x16.png</ImageSource>
    <ImageSource x:Key="@Flow_24x24.png">pack://application:,,,/Ginger;component/Images/@Flow_24x24.png</ImageSource>
    <ImageSource x:Key="@Flow_32x32.png">pack://application:,,,/Ginger;component/Images/@Flow_32x32.png</ImageSource>

    <ImageSource x:Key="@Reset_24x24.png">pack://application:,,,/Ginger;component/Images/@Reset_24x24.png</ImageSource>
    <ImageSource x:Key="@OnSign_24x24.png">pack://application:,,,/Ginger;component/Images/@OnSign_24x24.png</ImageSource>
    <ImageSource x:Key="@OffSign_24x24.png">pack://application:,,,/Ginger;component/Images/@OffSign_24x24.png</ImageSource>


    <ImageSource x:Key="@Info_32x32.png">pack://application:,,,/Ginger;component/Images/@Info_32x32.png</ImageSource>
    <ImageSource x:Key="@Lock_Yellow_10x10.png">pack://application:,,,/Ginger;component/Images/@Lock_Yellow_10x10.png</ImageSource>

    <ImageSource x:Key="@Link_16x16.png">pack://application:,,,/Ginger;component/Images/@Link_16x16.png</ImageSource>
    <ImageSource x:Key="@Commit_16x16.png">pack://application:,,,/Ginger;component/Images/@Commit_16x16.png</ImageSource>

    <ImageSource x:Key="@ArrowDown_32x32.png">pack://application:,,,/Ginger;component/Images/@ArrowDown_32x32.png</ImageSource>
    <ImageSource x:Key="@ArrowUp_32x32.png">pack://application:,,,/Ginger;component/Images/@ArrowUp_32x32.png</ImageSource>

    <ImageSource x:Key="@GingerLogoNew">pack://application:,,,/Ginger;component/Images/@GingerLogoNew.png</ImageSource>
    <ImageSource x:Key="@GingerIcon">pack://application:,,,/Ginger;component/Images/@GingerIcon.png</ImageSource>

    <ImageSource x:Key="@amdocs_logo.jpg">pack://application:,,,/Ginger;component/Images/@amdocs_logo.jpg</ImageSource>
    <ImageSource x:Key="@HTMLReport_Default_24x16">pack://application:,,,/Ginger;component/Images/@HTMLReport_Default_24x16.png</ImageSource>

    <ImageSource x:Key="@PlayFlow_16x16">pack://application:,,,/Ginger;component/Images/@PlayFlow_16x16.png</ImageSource>

    <ImageSource x:Key="@GingerLogoNew_Small">pack://application:,,,/Ginger;component/Images/@GingerLogoNew_Small.png</ImageSource>

    <ImageSource x:Key="@VisualFlow_32x32.png">pack://application:,,,/Ginger;component/Images/@VisualFlow_32x32.png</ImageSource>
    <ImageSource x:Key="@VisualFlow_16x16.png">pack://application:,,,/Ginger;component/Images/@VisualFlow_16x16.png</ImageSource>

    <ImageSource x:Key="POM_32x32.png">pack://application:,,,/Ginger;component/Images/POM_32x32.png</ImageSource>
    

    <!-- NEW Design Skin 1 Colors -->
    <SolidColorBrush x:Key="@Skin1_ColorA" Color="#20334f" />
    <SolidColorBrush x:Key="@Skin1_ColorB" Color="#fa8808" />
    <SolidColorBrush x:Key="@Skin1_ColorB2" Color="#FFD075" />
    <SolidColorBrush x:Key="@Skin1_ColorC" Color="#ecf1f6" />
    <SolidColorBrush x:Key="@Skin1_ColorD" Color="White" />
    <SolidColorBrush x:Key="@Skin1_ColorE" Color="#C0CBD5" />
    <SolidColorBrush x:Key="@Skin1_ColorF" Color="#3399FF" />
    <SolidColorBrush x:Key="@Skin1_ColorG" Color="#BADDFF" /> 
    <SolidColorBrush x:Key="@Skin1_ColorH" Color="White" />
    <SolidColorBrush x:Key="@Skin1_ColorI" Color="#b7b7b7" />


    <!-- NEW Design Styles -->
    <Style TargetType="Label" x:Key="@AppVerStyle" >
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}"/>
        <Setter Property="Width" Value="135"/>
        <Setter Property="Height" Value="31"/>
    </Style>

    <Style TargetType="TextBlock"  x:Key="@TextBlockStyle" >
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}"/>
    </Style>

    <Style TargetType="TextBlock"  x:Key="@DetailsTextBlockStyle" >
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    </Style>

    <Style TargetType="RichTextBox"  x:Key="@DetailsRichTextBoxStyle" >
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    </Style>



    <Style TargetType="CheckBox"  x:Key="@CheckBoxStyle" >
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}"/>
    </Style>

    <Style TargetType="Label"  x:Key="@LabelStyle" >
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}"/>
    </Style>

    <Style TargetType="DockPanel" x:Key="@ucDockPanelStyle" >
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="1"/>
                    <GradientStop Color="#20334f"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Label}"
       TargetType="{x:Type Label}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}" 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="False"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
  

    <Style TargetType="Label" x:Key="@ucTitleStyle_1">
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorB}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Background" Value="{DynamicResource @Skin1_ColorA}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    <Style TargetType="Label" x:Key="@ucTitleStyle_2">
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorB}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="{DynamicResource @Skin1_ColorA}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style TargetType="Label" x:Key="@ucTitleStyle_3">
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorD}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="{DynamicResource @Skin1_ColorA}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style TargetType="Label" x:Key="@ucTitleStyle_Light">
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="{DynamicResource @Skin1_ColorC}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>
    <Style TargetType="Label" x:Key="@ucTitleStyle_4">
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="{DynamicResource @Skin1_ColorC}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>
    
    <Style TargetType="Label" x:Key="@ucGridTitleTransparentBackground">
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style TargetType="Label" x:Key="@NoTitle">
        <Setter Property="Visibility" Value="Collapsed"/>
    </Style>


    <Style TargetType="Label" x:Key="@SectionHeaderLabelStyle" >
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorD}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="{DynamicResource @Skin1_ColorA}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="Label" x:Key="@VerticalExpanderLabelStyle" >
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorB}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="{DynamicResource @Skin1_ColorA}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <RotateTransform Angle="90"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Label" x:Key="@HorizontalExpanderLabelStyle" >
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorB}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="{DynamicResource @Skin1_ColorA}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="Label" x:Key="@MenuHorizontalExpanderLabelStyle" >
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorD}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="{DynamicResource @Skin1_ColorA}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="Label" x:Key="@HorizontalExpanderLightLabelStyle" >
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="{DynamicResource @Skin1_ColorC}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="Label" x:Key="@AppMotoStyle" >
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorB}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Width" Value="278"/>
        <Setter Property="Height" Value="48"/>
    </Style>

    <Style TargetType="Button" x:Key="@WindowButtonStyle">
        <Setter Property="BorderBrush" Value="{DynamicResource @Skin1_ColorA}" />
        <Setter Property="Background" Value="{DynamicResource @Skin1_ColorA}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Open Sans" />
        <Setter Property="Height" Value="25" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Padding" Value="25,0,25,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}" 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorB}" />
                        </Trigger>
                       
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="@InputButtonStyle">
        <Setter Property="Background" Value="{DynamicResource @Skin1_ColorC}" />
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}" />
        <Setter Property="FontFamily" Value="Open Sans" />
        <Setter Property="Height" Value="25" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="2,0,0,2" />
        <Setter Property="Padding" Value="5,0,5,0"/>
       
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{DynamicResource @Skin1_ColorA}" BorderThickness="1">
                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}" 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="{DynamicResource @Skin1_ColorA}" />
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="@InputButtonStyleRoundCorner">
        <Setter Property="Background" Value="{DynamicResource @Skin1_ColorC}" />
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}" />
        <Setter Property="FontFamily" Value="Open Sans" />
        <Setter Property="Height" Value="20" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Padding" Value="5,0,5,0"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{DynamicResource @Skin1_ColorA}" BorderThickness="1" CornerRadius="3">
                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}" 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="{DynamicResource @Skin1_ColorA}" />
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="@InputButtonStyle2">
        <Setter Property="Background" Value="{DynamicResource @Skin1_ColorA}" />
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorC}" />
        <Setter Property="FontFamily" Value="Open Sans" />
        <Setter Property="Height" Value="25" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="2,0,0,2" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{DynamicResource @Skin1_ColorC}" BorderThickness="2" CornerRadius="8">
                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}" 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}" />
                            <Setter Property="Background" Value="{DynamicResource @Skin1_ColorB}" />
                        </Trigger>
                       
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="@InputButtonStyle_NoBorder">
        <Setter Property="Background" Value="{DynamicResource @Skin1_ColorC}" />
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}" />
        <Setter Property="FontFamily" Value="Open Sans" />
        <Setter Property="Height" Value="25" />
        <Setter Property="FontSize" Value="12" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="Transparent" BorderThickness="1">
                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}" 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="{DynamicResource @Skin1_ColorA}" />
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="@InputImageButtonStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}" />
        <Setter Property="FontFamily" Value="Open Sans" />
        <Setter Property="Height" Value="25" />
        <Setter Property="FontSize" Value="12" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{DynamicResource @Skin1_ColorA}" BorderThickness="1">
                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}" 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="{DynamicResource @Skin1_ColorB2}" />
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="@InputImageButtonStyle_NoBorder">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}" />
        <Setter Property="FontFamily" Value="Open Sans" />
        <Setter Property="Height" Value="25" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="Transparent" BorderThickness="1">
                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}" 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="{DynamicResource @Skin1_ColorB2}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="@InputImageButtonStyle_NoBorder_NoBackground">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}" />
        <Setter Property="FontFamily" Value="Open Sans" />
        <Setter Property="Height" Value="25" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="Transparent" BorderThickness="1">
                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}" 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="Transparent" />
                            <Setter Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style TargetType="Button" x:Key="@InputImageGridCellButtonStyle">
        
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}" />
        <Setter Property="FontFamily" Value="Open Sans" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="Transparent" BorderThickness="1">
                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}" 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="{DynamicResource @Skin1_ColorB2}" />
                        </Trigger>
                       
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="@GridFloatingImageButtonStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}" />
        <Setter Property="FontFamily" Value="Open Sans" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="20" />
        <Setter Property="FontSize" Value="12" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{DynamicResource @Skin1_ColorA}" BorderThickness="1">
                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}" 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="{DynamicResource @Skin1_ColorB2}" />
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToggleButton" x:Key="@InputImageToggleButtonStyle_NoBorder">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}" />
        <Setter Property="FontFamily" Value="Open Sans" />
        <Setter Property="Height" Value="25" />
        <Setter Property="FontSize" Value="12" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="Transparent" BorderThickness="1">
                        <ContentPresenter 
                                TextElement.Foreground="{TemplateBinding Foreground}" 
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="{DynamicResource @Skin1_ColorB2}" />
                        </Trigger>
                        <Trigger Property="IsPressed"  Value="true">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="{DynamicResource @Skin1_ColorB2}" />
                        </Trigger>
                        <Trigger Property="IsChecked"  Value="true">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="{DynamicResource @Skin1_ColorB2}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="RibbonTabHeader" x:Key="@RibbonTabHeaderStyle">
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}" />
        <Setter Property="FontFamily" Value="Open Sans" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="15,3,15,3" />
        <Setter Property="BorderThickness" Value="0,2,0,0" />
        <Setter Property="Margin" Value="1,0,1,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RibbonTabHeader">
                    <ControlTemplate.Resources>
                        <SolidColorBrush x:Key="CheckedBackground" Color="#DFE9F5" />
                        <SolidColorBrush x:Key="CheckedBorderBrush" Color="#fa8808" />
                        <SolidColorBrush x:Key="FocusedBackground" Color="#DFE9F5" />
                        <SolidColorBrush x:Key="FocusedBorderBrush" Color="#fa8808" />
                        <SolidColorBrush x:Key="MouseOverBackground" Color="#DFE9F5" />
                        <SolidColorBrush x:Key="MouseOverBorderBrush" Color="#fa8808" />
                        <SolidColorBrush x:Key="headerRegularColor" Color="#20334f" />
                    </ControlTemplate.Resources>
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
						        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" 
							    ContentSource="{Binding Label}" RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsRibbonTabSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource CheckedBackground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource CheckedBorderBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource $amdocsLogoRadialGradientBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsRibbonTabSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource MouseOverBackground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource MouseOverBorderBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource headerRegularColor}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="RibbonTabHeader" x:Key="@RibbonTabHeaderStyle_Hidden">
        <Setter Property="Foreground" Value="Transparent" />
        <Setter Property="FontSize" Value="1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="Width" Value="0" />
    </Style>

    <Style TargetType="TabItem" x:Key="@TabItemStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border Name="TabItemBorder" Margin="0,0,-4,0" BorderThickness="1,1,1,1" CornerRadius="2,2,0,0">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center"
								  ContentSource="Header" Margin="12,2" RecognizesAccessKey="True" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style TargetType="DataGridColumnHeader" x:Key="@DataGridColumnHeader" >
        <Setter Property="Height" Value="20" />
        <Setter Property="Background" Value="#CFD6E5"/>
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}" />
        <Setter Property="FontWeight"  Value="Bold"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0.6"/>
        <Setter Property="BorderBrush" Value="{DynamicResource @Skin1_ColorA}"/>
    </Style>

    <Style TargetType="DataGridCell" x:Key="@DataGridCellStyle" >
        <Setter Property="BorderThickness" Value="0.5"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource @Skin1_ColorF}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderBrush" Value="{DynamicResource @Skin1_ColorA}"/>
                <Setter Property="BorderThickness" Value="0.8"/>
            </Trigger>
            <Trigger Property="IsEditing" Value="True">
                <Setter Property="Background" Value="{DynamicResource @Skin1_ColorG}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource @Skin1_ColorG}"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
               
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style  TargetType="DataGridCell"  x:Key="@GridCellStyle">
       
        <Setter Property="Margin"  Value="0,5,0,0"/>
        
    </Style>

    <Style  TargetType="DataGridColumnHeader"  x:Key="@GridColumnHeaderStyle">
        <Setter Property="VerticalContentAlignment"  Value="Center"/>
        <Setter Property="HorizontalContentAlignment"  Value="Center"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    </Style>

    <Style  TargetType="CheckBox"  x:Key="@CheckBoxGridCellElemntStyle">
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    </Style>

    <Style  TargetType="CheckBox"  x:Key="@ReadOnlyCheckBoxGridCellElemntStyle">
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
    </Style>

    <Style  TargetType="FrameworkElement" x:Key="@ReadOnlyGridCellElemntStyle">
        <Setter Property="IsHitTestVisible" Value="False"/>
       
    </Style>
    <Style  TargetType="FrameworkElement" x:Key="@GraphStyleBF">
        <Setter Property="FrameworkElement.Margin" Value="60,0,0,0"/>
    </Style>
    <Style  TargetType="FrameworkElement" x:Key="@GraphStyleActivity">
        <Setter Property="FrameworkElement.Margin" Value="80,0,0,0"/>
    </Style>
    <Style  TargetType="FrameworkElement" x:Key="@GraphStyleAction">
        <Setter Property="FrameworkElement.Margin" Value="90,0,0,0"/>
    </Style>
    <Style  TargetType="FrameworkElement" x:Key="@GraphStyleV">
        <Setter Property="FrameworkElement.Margin" Value="80,0,0,0"/>
    </Style>
    <Style  TargetType="TextBlock"  x:Key="@TextBlockGridCellElemntStyle_CenterAlign">
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
       
    </Style>

    <Style  TargetType="TextBlock"  x:Key="@TextBlockGridCellElemntStyle_RightAlign">
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Right"/>
       
    </Style>

    <Style TargetType="TextBlock" x:Key="@DataGridColumn_Bold">
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style TargetType="GridSplitter" x:Key="@HorizontalGridSplitterStyle" >
        <Setter Property="Width" Value="10"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#ECF1F9" Offset="0.981"/>
                    <GradientStop Color="#CFD6E5" Offset="0.312"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="DarkGray"/>
    </Style>

    <Style TargetType="GridSplitter" x:Key="@VerticalGridSplitterStyle" >
        <Setter Property="Width" Value="10"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush MappingMode="RelativeToBoundingBox" EndPoint="1,0.5"  StartPoint="0,0.5">
                    <GradientStop Color="#ECF1F9" Offset="0.981"/>
                    <GradientStop Color="#CFD6E5" Offset="0.312"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="DarkGray"/>
    </Style>

    <Style TargetType="Expander" x:Key="@ExpanderLightStyle" >
        <Setter Property="Background" Value="{StaticResource @Skin1_ColorC}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource @Skin1_ColorA}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style TargetType="Expander" x:Key="@ExpanderDarkStyle" >
        <Setter Property="Background" Value="{DynamicResource @Skin1_ColorA}"/>
        <Setter Property="BorderBrush" Value="White"/>
        
    </Style>

    <Style TargetType="Expander" x:Key="@MenuExpanderDarkStyle" >
        <Setter Property="Background" Value="{DynamicResource @Skin1_ColorA}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
    </Style>

    <Style TargetType="GridSplitter" x:Key="@TreeSplitterStyle" >
        <Setter Property="Width" Value="10"/>
        <Setter Property="Background" Value="{DynamicResource @Skin1_ColorA}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource @Skin1_ColorA}"/>
    </Style>

    <Style TargetType="Label" x:Key="@InputFieldLabelStyle" >
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}"/>
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="{DynamicResource @Skin1_ColorC}"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
    </Style>

    <Style TargetType="Label" x:Key="@SmallerInputFieldLabelStyle" >
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}"/>
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Background" Value="{DynamicResource @Skin1_ColorC}"/>
        <Setter Property="Margin" Value="-2,0,0,0"/>
    </Style>

    <Style TargetType="Label" x:Key="@SubInputFieldLabelStyle" >
        <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}"/>
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="White"/>
    </Style>

    <Style TargetType="TextBox" x:Key="@TextBoxStyle" >
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="{DynamicResource @Skin1_ColorA}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style TargetType="{x:Type ListBox}" x:Key="@ListBoxTransparntSelectedItem">
        <Style.Resources>
            <!-- Background of selected item when focussed -->
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" 
                         Color="Transparent"/>
            <!-- Background of selected item when not focussed -->
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" 
                         Color="Transparent" />
        </Style.Resources>
    </Style>

    <Style TargetType="TextBox" x:Key="@MultiRowsTextBoxStyle" >
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="BorderBrush" Value="{DynamicResource @Skin1_ColorA}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="IsEnabled" Value="True" />
    </Style>

    <Style TargetType="PasswordBox" x:Key="@PasswordBoxStyle" >
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="{DynamicResource @Skin1_ColorA}"/>
    </Style>

    <Style TargetType="TextBox" x:Key="@ToolBarTextBoxStyle" >
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Height" Value="14"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="{DynamicResource @Skin1_ColorA}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style TargetType="ListBox" x:Key="@ListBoxStyle" >
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="{DynamicResource @Skin1_ColorA}"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    </Style>


    <ControlTemplate x:Key="@ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="18" />
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="{DynamicResource @Skin1_ColorA}"
                  BorderBrush="{DynamicResource @Skin1_ColorA}"
                  BorderThickness="1" />
            <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="White" 
                  BorderBrush="{DynamicResource @Skin1_ColorA}"
                  BorderThickness="0,0,1,0" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
        </Grid>
      
    </ControlTemplate>

    <ControlTemplate x:Key="@TagComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="18" />
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="{DynamicResource @Skin1_ColorH}"
                  BorderBrush="{DynamicResource @Skin1_ColorH}"
                  BorderThickness="0" />
            <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="White" 
                  BorderBrush="{DynamicResource @Skin1_ColorH}"
                  BorderThickness="0,0,1,0" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
        </Grid>
       
    </ControlTemplate>


    <ControlTemplate x:Key="@ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" />
    </ControlTemplate>

    <ControlTemplate x:Key="@TagComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="White" CornerRadius="5" />
    </ControlTemplate>

    <Style x:Key="@ToolBarComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="MinHeight" Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                                Name="ToggleButton" 
                                Template="{StaticResource @ComboBoxToggleButton}" 
                                Grid.Column="2" 
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"     
                                Margin="4,0,4,0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                                Style="{x:Null}" 
                                Template="{DynamicResource @ComboBoxTextBox}" 
                                HorizontalAlignment="Left" 
                                VerticalAlignment="Center" 
                                Margin="4,0,4,0"
                                Focusable="True" 
                                Background="White"
                                Foreground="{DynamicResource @Skin1_ColorA}"
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True" 
                                Focusable="False"
                                PopupAnimation="Slide">
                            <Grid Name="DropDown"
                                    SnapsToDevicePixels="True"                
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                        x:Name="DropDownBorder"
                                        Background="White"
                                        BorderThickness="1"
                                        BorderBrush="{DynamicResource @Skin1_ColorA}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

        <Style x:Key="@InputComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                                Name="ToggleButton" 
                                Template="{StaticResource @ComboBoxToggleButton}" 
                                Grid.Column="2" 
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"     
                                Margin="4,0,22,0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox" 
                                Style="{x:Null}" 
                                Template="{DynamicResource @ComboBoxTextBox}" 
                                HorizontalAlignment="Left" 
                                VerticalAlignment="Center" 
                                Margin="4,0,4,0"
                                Focusable="True" 
                                Background="White"
                                Foreground="{DynamicResource @Skin1_ColorA}"
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True" 
                                Focusable="False"
                                PopupAnimation="Slide">
                            <Grid Name="DropDown"
                                    SnapsToDevicePixels="True"                
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                        x:Name="DropDownBorder"
                                        Background="White"
                                        BorderThickness="1"
                                        BorderBrush="{DynamicResource @Skin1_ColorA}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property = "Foreground" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <Style x:Key="@TagsComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="MinHeight" Value="18"/>
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">

                    <Grid>
                        <ToggleButton 
                                Name="ToggleButton" 
                                Template="{StaticResource @TagComboBoxToggleButton}" 
                                Grid.Column="2" 
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"           
                                Margin="4,0,4,0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                                Style="{x:Null}" 
                                Template="{StaticResource @TagComboBoxTextBox}" 
                                HorizontalAlignment="Left" 
                                VerticalAlignment="Center" 
                                Margin="4,0,4,0"
                                Focusable="True" 
                                Background="White"
                                Foreground="{DynamicResource @Skin1_ColorH}"
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"   
                                AllowsTransparency="True" 
                                Focusable="False"
                                PopupAnimation="Slide">
                            <Grid Name="DropDown"
                                    SnapsToDevicePixels="True"                
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                        x:Name="DropDownBorder"
                                        Background="WhiteSmoke"
                                        BorderThickness="0"
                                        BorderBrush="{DynamicResource @Skin1_ColorH}"/>

                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" HorizontalAlignment="Left" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource @Skin1_ColorA}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <Style TargetType="CheckBox" x:Key="@InputCheckBoxStyle" >
        <Setter Property="Foreground" Value="{StaticResource @Skin1_ColorA}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource @Skin1_ColorA}"/>
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <Style TargetType="RadioButton" x:Key="@InputRadioButtonStyle" >
        <Setter Property="Foreground" Value="{StaticResource @Skin1_ColorA}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource @Skin1_ColorA}"/>
        <Setter Property="BorderThickness" Value="1" />
    </Style>



</ResourceDictionary>