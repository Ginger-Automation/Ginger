    <UserControl x:Name="over" x:Class="Ginger.ucTag"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Ginger.TagsLib"
             mc:Ignorable="d">

    <Border x:Name="xTagBorder" BorderBrush="{StaticResource $BackgroundColor_DarkGray}" CornerRadius="5" BorderThickness="1" Background="{StaticResource $BackgroundColor_Gray}" Margin="0,0,5,0">
        <StackPanel x:Name="tagStack" Background="Transparent" Orientation="Horizontal" Margin="2,0,2,0" HorizontalAlignment="Left"  Height="24" MouseLeave="tagStack_MouseLeave" MouseEnter="tagStack_MouseEnter">
            <Label x:Name="lblTagName" Background="Transparent" Style="{StaticResource @SmallerInputFieldLabelStyle}" FontSize="11"/>
            <Button x:Name="xDeleteTagBtn" BorderBrush="Transparent" VerticalAlignment="Center" ToolTip="Remove" HorizontalAlignment="Left" Width="10" Height="10"  BorderThickness="0" Margin="0,0,2,0">
                <Button.Content>
                    <Border>
                        <Image x:Name="closeImage" Margin="1" Source="{StaticResource @TagClose_16X16.png}" />
                        <!--<Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" Value="{StaticResource $SelectionColor_LightBlue}" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" Value="{StaticResource $SelectionColor_LightBlue}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>-->
                    </Border>
                </Button.Content>
                <Button.Style>
                    <Style TargetType="{x:Type Button}" >
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}" >
                                    <ContentPresenter />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>
    </Border>
</UserControl>
