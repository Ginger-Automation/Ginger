    <Page x:Class="Ginger.Actions.ActionEditPage" xmlns:Ginger="clr-namespace:Ginger"
      xmlns:Actions="clr-namespace:Ginger.Actions" 
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:h="clr-namespace:Ginger.Help" 
      xmlns:GingerCore="clr-namespace:GingerCore;assembly=GingerCore"
      xmlns:UCControl="clr-namespace:Ginger.UserControlsLib"
      mc:Ignorable="d" 
      Title="Edit Action" 
      d:DesignWidth="1100"
      d:DesignHeight="800"
      SizeChanged="Page_SizeChanged">

    <Grid Name="pageGrid" Background="{StaticResource $BackgroundColor_LightGray}">
        <Grid.Resources>
            <DataTemplate x:Key="ValueExpressionButton">
                <Button x:Name="GridVEButton" Content="..." Click="GridVEButton_Click"  Style="{DynamicResource DataGridCellButtonStyle}"/>
            </DataTemplate>
            <DataTemplate x:Key="ParamValueExpressionButton">
                <Button x:Name="GridParamVEButton" Content="..." Click="GridParamVEButton_Click"  Style="{DynamicResource DataGridCellButtonStyle}"/>
            </DataTemplate>
            <DataTemplate x:Key="InputValueExpressionButton">
                <Button x:Name="InputGridVEButton" Content="..." Click="InputGridVEButton_Click"  Style="{DynamicResource DataGridCellButtonStyle}"/>
            </DataTemplate>
            <DataTemplate x:Key="AddActualToExpectButton">
                <Button x:Name="GridAddActualToExpectButton" Content=">>" Click="GridAddActualToExpectButton_Click"  Style="{DynamicResource DataGridCellButtonStyle}"/>
            </DataTemplate>
            <DataTemplate x:Key="AddActualToSimulButton">
                <Button x:Name="GridAddActualToSimulButton" Content="&lt;&lt;" Click="GridAddActualToSimulButton_Click"  Style="{DynamicResource DataGridCellButtonStyle}"/>
            </DataTemplate>
            <DataTemplate x:Key="PathValueExpressionButton">
                <Button x:Name="GridPathVEButton" Content="..." Click="GridPathVEButton_Click"  Style="{DynamicResource DataGridCellButtonStyle}"/>
            </DataTemplate>
            <DataTemplate x:Key="SimulatedlValueExpressionButton">
                <Button x:Name="GridPathVEButton" Content="...." Click="SimulatedOutputGridVEButton_Click"  Style="{DynamicResource DataGridCellButtonStyle}"/>
            </DataTemplate>
            <DataTemplate x:Key="DataSourceValueExpressionButton">
                <Button x:Name="GridDSVEButton" Content="..." Click="GridDSVEButton_Click"  Style="{DynamicResource DataGridCellButtonStyle}"/>
            </DataTemplate>
            <DataTemplate x:Key="StoreToObject">
                <UCControl:UCStoreTo x:Name="StoreToObj"/>
            </DataTemplate>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="187"/>
            <RowDefinition />
            <RowDefinition x:Name="xRunStatusRow" Height="125" />
        </Grid.RowDefinitions>

        <DockPanel  x:Name="xActionsDetails" Grid.Row="0">
            <StackPanel Orientation="Vertical" DockPanel.Dock="Top" Height="143">
                <StackPanel Orientation="Vertical" DockPanel.Dock="Top">
                    <Label Style="{StaticResource @InputFieldLabelStyle}">Description:</Label>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition x:Name="SharedRepoInstanceUC_Col"  Width="50"/>
                        </Grid.ColumnDefinitions>
                        <TextBox x:Name="txtDescription" Grid.Column="0" Style="{StaticResource @TextBoxStyle}" ScrollViewer.VerticalScrollBarVisibility="Auto" VerticalContentAlignment="Top" FontSize="14" FontWeight="Bold" HorizontalAlignment="Stretch" Height="50"></TextBox>
                        <Ginger:ucSharedRepoInstance x:Name="SharedRepoInstanceUC" Grid.Column="1" />
                    </Grid>
                </StackPanel>
                <StackPanel Orientation="Vertical" DockPanel.Dock="Top" Height="54">
                    <Label Style="{StaticResource @InputFieldLabelStyle}">Run Description:</Label>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition x:Name="dummyWidth_Col"  Width="50"/>
                        </Grid.ColumnDefinitions>
                        <Actions:UCValueExpression Grid.Column="0" x:Name="RunDescritpion" ToolTip="Subject" HorizontalAlignment="Stretch" Height="50" HideVEBusinessFlowAndActivityVariables="True" Margin="0,-13,0,13"/>
                    </Grid>
                </StackPanel>
            </StackPanel>
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="0,5,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" Width="1100">
                <StackPanel Orientation="Horizontal" Margin="2,0,0,0" Width="151">
                    <Label Content="Wait:" Style="{StaticResource @InputFieldLabelStyle}" />
                    <!--TextBox x:Name="txtWait" ToolTip="Action will wait this seconds long before start to run" Style="{StaticResource @TextBoxStyle}" Width="60" Height="22" HorizontalAlignment="Left"/>-->
                    <Actions:UCValueExpression x:Name="xWaittxtWait" ToolTip="Action will wait this seconds long before start to run" HorizontalAlignment="Stretch" Height="32" Width="100" />
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="10,0,0,0">
                    <Label Content="Timeout:" Style="{StaticResource @InputFieldLabelStyle}"/>
                    <TextBox x:Name="txtTimeout" TextChanged="txtTimeout_TextChanged" ToolTip="Timeout is been used to configure the MAXIMUM allowed time (Action can finish before) for the Action to run. If action running longer than the timeout time (seconds), the action will stop and mark as Failed" Style="{StaticResource @TextBoxStyle}" Width="60" Height="22" HorizontalAlignment="Left"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="10,0,0,0"  ToolTip="Status Conversion will be performed only after flow control is executed. So that flow control will always use the original action status">
                    <Label Content="Status Converter:" Style="{StaticResource @InputFieldLabelStyle}" />
                    <ComboBox x:Name="comboFinalStatus"  Margin="0,0,0,0" Style="{StaticResource @InputComboBoxStyle}" Width="150" HorizontalAlignment="Left"/>
                </StackPanel>
                <StackPanel>
                    <Ginger:ucTagsViewer x:Name="TagsViewer" Margin="10,0,0,0" HorizontalAlignment="Left" Width="590"/>
                </StackPanel>
                <CheckBox x:Name="FailIgnoreCheckBox" Content="Ignore on Fail" Visibility="Collapsed" ToolTip="If the action fails change status to Ignore Fail" Margin="20,0,0,0" Style="{StaticResource @CheckBoxStyle}" FontSize="14" Height="18"/>
            </StackPanel>
        </DockPanel>
        <!--</Grid>-->

        <!--Tabs Area-->
        <TabControl x:Name="ActionTab" Grid.Row="1"  HorizontalAlignment="Stretch" SelectionChanged="ActionTab_SelectionChanged" Background="{StaticResource $BackgroundColor_LightGray}">
            <TabControl.Resources>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Background" Value="{StaticResource $BackgroundColor_LightGray}"/>
                    <Setter Property="Height" Value="33"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="False" >
                            <Setter Property="Background" Value="{StaticResource $BackgroundColor_LightGray}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True" >
                            <Setter Property="Background" Value="{StaticResource $BackgroundColor_LightGray}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TabControl.Resources>
            <TabItem Margin="0,0,0,0">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Source="{StaticResource  @Config_20x20.png }" Height="20" Width="20" />
                        <TextBlock Text="Configurations" VerticalAlignment="Center" Margin="5,0,0,0" Foreground="{StaticResource $Color_DarkBlue}" FontWeight="Bold" />
                    </StackPanel>
                </TabItem.Header>

                <Grid x:Name="xActionConfiguration">
                   
                    <ScrollViewer Grid.Row="1" CanContentScroll="False" VerticalScrollBarVisibility="Auto" >
                        <StackPanel               
                            VerticalAlignment="Stretch" 
                             >
                            <Grid x:Name="ActionLocatorPanel" Background="{StaticResource $BackgroundColor_LightGray}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="80" />
                                    <ColumnDefinition Width="120" />
                                    <ColumnDefinition Width="100" />
                                    <ColumnDefinition Width="500*" />
                                    <ColumnDefinition Width="100" />
                                    <ColumnDefinition Width="30" />
                                    <ColumnDefinition Width="30" />
                                </Grid.ColumnDefinitions>

                                <Label Grid.Column="0" Content="Locate By:" Style="{StaticResource @SubInputFieldLabelStyle}" Background="{StaticResource $BackgroundColor_LightGray}"/>
                                <ComboBox Grid.Column="1" x:Name="cboLocateBy" SelectionChanged="cboLocateBy_SelectionChanged" Style="{StaticResource @InputComboBoxStyle}" 
                                                  ToolTip="How to Locate the Element on the screen" 
                                                   />

                                <Label Grid.Column="2" Content="Locate Value:" Style="{StaticResource @SubInputFieldLabelStyle}" Background="{StaticResource $BackgroundColor_LightGray}" />
                                <Actions:UCValueExpression Grid.Column="3" HorizontalAlignment="Stretch" x:Name="txtLocateValue" />
                                <Button Grid.Column="4" x:Name="btnEditLocator" Click="btnEditLocator_Click" Style="{StaticResource @InputButtonStyle}" >Edit</Button>
                                
                                <Button Grid.Column="5" x:Name="ControlSelectorButton" Click="ControlSelectorButton_Click" ToolTip="Open Window Explorer to select Element" Style="{StaticResource @InputImageButtonStyle_NoBorder}"  Margin="0,0,0,0">
                                    <Image Source="{StaticResource @Target_24x24.png}"/>
                                </Button>
                                <Button Grid.Column="6" x:Name="HighLightElementButton" Click="HighLightElementButton_Click" ToolTip="Highlight Element on Application" Style="{StaticResource @InputImageButtonStyle_NoBorder}"  Margin="0,0,0,0">
                                    <Image Source="{StaticResource @View_16x16}"/>
                                </Button>
                            </Grid>

                            <StackPanel x:Name="ActionPrivateConfigsPanel" Margin="0,0,0,0">
                                <Frame x:Name="ActionPrivateConfigsFrame" VerticalAlignment="Top" Content="Action configuration Frame"
                                                        NavigationUIVisibility="Hidden"                                  
                                                        ScrollViewer.VerticalScrollBarVisibility="Auto" 
                                                        ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                                        ScrollViewer.CanContentScroll="True"/>
                            </StackPanel>

                            <StackPanel Name="InputValuesEditControls">
                                <StackPanel Name="ValueGridPanel" Visibility="Collapsed" HorizontalAlignment="Stretch" Margin="0,10,0,0">
                                    <Ginger:ucGrid x:Name="InputValuesGrid" Title="Input Value(s)" Height="156"/>
                                </StackPanel>
                                <StackPanel Name="ValueBoxPanel" Orientation="Horizontal" Margin="0,10,0,0">
                                    <Label Name="ValueLabel" Style="{StaticResource @SubInputFieldLabelStyle}" Content="Value" Background="{StaticResource $BackgroundColor_LightGray}"/>
                                    <Actions:UCValueExpression x:Name="ValueUC" Margin="37,0,0,0" Width="640" ToolTip="Value to Set"/>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>
            </TabItem>

            <TabItem x:Name="RetyrMechainsmTab" Margin="2,0,-6,0">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" >
                        <Image Source="{StaticResource  @Reset_24x24.png }" Height="20" Width="20" />
                        <Image Tag="OffSignImage" Source="{StaticResource  @OffSign_24x24.png }" Height="20" Width="20" Margin="-7,0,0,0"  />
                        <Image Tag="OnSignImage" Source="{StaticResource  @OnSign_24x24.png }" Height="20" Width="20" Margin="-7,0,0,0" Visibility="Collapsed"/>
                        <TextBlock x:Name="RetryMechanismTabTextBlock" Text="Retry Mechanism" VerticalAlignment="Center" Margin="0,0,0,0" Foreground="{StaticResource $Color_DarkBlue}" FontWeight="Bold" />
                    </StackPanel>
                </TabItem.Header>

                <StackPanel x:Name="RetryMechanismStackPanel" Margin="0,10,0,0" >
                    <!--<Label Content="Retry Mechanism"  HorizontalAlignment="Stretch" Style="{StaticResource @SectionHeaderLabelStyle}" Height="30"/>-->
                    <CheckBox x:Name="EnableRetryMechanismCheckBox" Margin="5,0,0,0" Content="Enable Retry Mechanism" FontWeight="Bold" Style="{StaticResource @CheckBoxStyle}" Checked="EnableRetryMechanismCheckBox_CheckedUnChecked" Unchecked="EnableRetryMechanismCheckBox_CheckedUnChecked"/>
                    
                    <StackPanel x:Name="RetryMechConfigsPnl" Orientation="Vertical" Margin="20,10,0,0">
                        <StackPanel Orientation="Horizontal">
                            <Label Style="{StaticResource @InputFieldLabelStyle}">Interval (seconds):</Label>
                            <TextBox x:Name="RetryMechanismIntervalTextBox" Style="{StaticResource @TextBoxStyle}" ToolTip="Number of seconds to wait before re-run" Width="50" Text="5" Margin="19,0,0,0" ></TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                            <Label Style="{StaticResource @InputFieldLabelStyle}">Max Retries Number:</Label>
                            <TextBox x:Name="RetryMechanismMaxRetriesTextBox" Style="{StaticResource @TextBoxStyle}" ToolTip="Max number of retries before finally failing the action" Width="50" Text="3"></TextBox>
                        </StackPanel>
                    </StackPanel>
                    <Label HorizontalAlignment="Left" Margin="0,20,0,0" Style="{StaticResource @LabelStyle}">Note: Retry mechanism is executed after error handler and before flow control.</Label>
                </StackPanel>
            </TabItem>

            <TabItem x:Name="FlowControlTab" Margin="8,0,-12,0" >
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" >
                        <Image Source="{StaticResource  @Flow_24x24.png }" Height="20" Width="20" />
                        <Image Tag="OffSignImage" Source="{StaticResource  @OffSign_24x24.png }" Height="20" Width="20" Margin="-7,0,0,0"  />
                        <Image Tag="OnSignImage" Source="{StaticResource  @OnSign_24x24.png }" Height="20" Width="20" Margin="-7,0,0,0" Visibility="Collapsed"/>
                        <TextBlock x:Name="FlowControlTabTextBlock" VerticalAlignment="Center" Margin="0,0,0,0" Foreground="{StaticResource $Color_DarkBlue}" FontWeight="Bold">
                            <Run>Flow Control</Run>
                            <Run x:Name="FlowControlCountLabel">(0)</Run>
                        </TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <Frame x:Name="FlowControlFrame" Content="Flow Control Frame"/>
            </TabItem>

            <TabItem x:Name="OutputTab" Margin="14,0,-18,0">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" >
                        <Image Source="{StaticResource  @Outputs_32x32.png }" Height="20" Width="20" />
                        <Image Tag="OffSignImage" Source="{StaticResource  @OffSign_24x24.png }" Height="20" Width="20" Margin="-4,0,0,0"  />
                        <Image Tag="OnSignImage" Source="{StaticResource  @OnSign_24x24.png }" Height="20" Width="20" Margin="-4,0,0,0" Visibility="Collapsed"/>
                        <TextBlock x:Name="OutputTabTextBlock" VerticalAlignment="Center" Margin="-1,0,0,0" Foreground="{StaticResource $Color_DarkBlue}" FontWeight="Bold">
                            <Run>Output Values</Run>
                            <Run x:Name="OutputCount">(0)</Run>
                        </TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <Grid   x:Name="xActionOutputGrid" Background="{StaticResource $BackgroundColor_LightGray}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30" Name="DataSourceRow"/>
                        <RowDefinition Height="33" Name="ActionLogRow"/>
                        <RowDefinition Height="30*"/>
                    </Grid.RowDefinitions>
                    <Expander  x:Name="xDataSourceExpander" ExpandDirection="Down" IsExpanded="False" Grid.Row="0" Style="{StaticResource @ExpanderLightStyle}" Expanded="xDataSourceExpander_Expanded" Collapsed="xDataSourceExpander_Collapsed">
                        <Expander.Header>
                            <Label x:Name="DataSourceExpanderLabel" Style="{StaticResource @HorizontalExpanderLightLabelStyle}">
                                <Label.Content>
                                    <GingerCore:ucTextDicResource Text="Outputs To Data Source" Width="585"/>
                                </Label.Content>
                            </Label>
                        </Expander.Header>
                        <Expander.Content>
                            <Grid x:Name="DataSourceGrid" Background="{StaticResource $BackgroundColor_LightGray}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="69*"/>
                                    <ColumnDefinition Width="1019*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="25"/>
                                    <RowDefinition Height="35" Name="DataSourceDetailsRow"/>
                                    <RowDefinition Height="180" Name="DataSourceConfigRow"/>
                                </Grid.RowDefinitions>

                                <StackPanel Name="ConfigDS"  Grid.Row="0" Margin="5,5,0,0" Grid.ColumnSpan="2">
                                    <CheckBox Name="AddOutDS" Content="Add Output Value/s to Data Source" Checked="AddOutDS_Checked"  Unchecked="AddOutDS_Unchecked" HorizontalAlignment="Left" Style="{StaticResource @CheckBoxStyle}" FontWeight="Bold"/>
                                </StackPanel>
                                <StackPanel x:Name="OutputsToDsConfig" Grid.Row="1" Orientation="Horizontal" Grid.ColumnSpan="2">
                                    <StackPanel Orientation="Horizontal">
                                        <Label HorizontalAlignment="Left"  VerticalAlignment="Center" Style="{StaticResource @LabelStyle}">Data Source:</Label>
                                        <ComboBox Name="cmbDataSourceName" Height="25" HorizontalAlignment="Left" IsReadOnly="True" Style="{StaticResource @InputComboBoxStyle}" Margin="5,0,0,0" Width="210" SelectionChanged="cmbDataSourceName_SelectionChanged"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="5,0,0,0">
                                        <Label HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource @LabelStyle}">Data Source Table:</Label>
                                        <ComboBox Name="cmbDataSourceTableName" Height="25" HorizontalAlignment="Left" IsReadOnly="True" Style="{StaticResource @InputComboBoxStyle}" Margin="5,0,0,0" Width="210" SelectionChanged="cmbDataSourceTableName_SelectionChanged"></ComboBox>
                                    </StackPanel>
                                </StackPanel>
                                <Ginger:ucGrid x:Name="DataSourceConfigGrid" Grid.Row="2"  Title="Output Value/s Parameters - Data Source Table Columns Mapping Configurations " ShowAdd="Collapsed" ShowDelete="Collapsed" ShowUpDown="Collapsed" ShowClearAll="Collapsed" ShowEdit="Collapsed" ShowRefresh="Collapsed" Grid.ColumnSpan="2"/>
                            </Grid>
                        </Expander.Content>
                    </Expander>

                    <Expander  x:Name="ActionLogConfigExpander" ExpandDirection="Down" IsExpanded="False" Grid.Row="1" Style="{StaticResource @ExpanderLightStyle}" Expanded="ActionLogConfigExpander_Expanded"  Collapsed="ActionLogConfigExpander_Collapsed">
                        <Expander.Header>
                            <Label x:Name="ActionLogConfigExpanderLabel" Style="{StaticResource @HorizontalExpanderLightLabelStyle}">
                                <Label.Content>
                                    <GingerCore:ucTextDicResource Text="Action Log" Width="585"/>
                                </Label.Content>
                            </Label>
                        </Expander.Header>
                        <Expander.Content>
                            <Grid x:Name="ActionLogGrid" Background="{StaticResource $BackgroundColor_LightGray}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="170" Name="ActionLogConfigRow"/>
                                </Grid.RowDefinitions>

                                <StackPanel Name="ActionLogStackPanel"  Grid.Row="0" Margin="5,5,0,0">
                                    <CheckBox x:Name="EnableActionLogConfigCheckBox" Content="Enable Action Log" HorizontalAlignment="Left" FontWeight="Bold" Style="{StaticResource @CheckBoxStyle}" Checked="EnableActionLogConfigCheckBox_Checked" Unchecked="EnableActionLogConfigCheckBox_UnChecked"/>
                                </StackPanel>
                                <StackPanel x:Name="ActionLogDetailsStackPanel" Grid.Row="1" Margin="5,5,0,0">
                                    <Frame x:Name="ActionLogConfigFrame">
                                    </Frame>
                                </StackPanel>
                            </Grid>
                        </Expander.Content>
                    </Expander>

                    <Ginger:ucGrid x:Name="OutputValuesGrid" Grid.Row="3" Margin="0,10,0,0" Title="Output Value(s)" ShowTitle="Collapsed" />

                </Grid>
            </TabItem>

            <TabItem x:Name="ScreenShotTab" Margin="20,0,-24,0">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" >
                        <Image Source="{StaticResource @Camera_32x32.png}" Height="20" Width="20"/>
                        <Image Tag="OffSignImage" Source="{StaticResource  @OffSign_24x24.png }" Height="20" Width="20" Margin="-6,0,0,0"  />
                        <Image Tag="OnSignImage" Source="{StaticResource  @OnSign_24x24.png }" Height="20" Width="20" Margin="-6,0,0,0" Visibility="Collapsed"/>
                        <TextBlock x:Name="ScreenShotTabTextBlock" VerticalAlignment="Center" Margin="0,0,0,0" Foreground="{StaticResource $Color_DarkBlue}" FontWeight="Bold">
                            <Run>Screenshots</Run>
                            <Run x:Name="ScreenShotCount">(0)</Run>
                        </TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <Grid  x:Name="xActionScreenshots" Background="{StaticResource $BackgroundColor_LightGray}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="60" />
                        <RowDefinition Height="30*"/>
                    </Grid.RowDefinitions>

                    <StackPanel x:Name="xScreenshotsSetting" Grid.Row="0" Orientation="Vertical" Margin="5,10,0,0">
                        <CheckBox x:Name="TakeScreenShotCheckBox" Content="Take Screenshot(s)" Checked="TakeScreenShot_Checked" Unchecked="TakeScreenShot_UnChecked" FontWeight="Bold" ToolTip="Add tested application screenshot to the report after the action executed" Style="{StaticResource @CheckBoxStyle}" />
                        <StackPanel Orientation="Horizontal" Margin="13,2,0,0" x:Name="TakeScreenshotsConfigs" Visibility="Visible">
                            <Label Content="Screenshot(s) Capture Type:" Style="{StaticResource @InputFieldLabelStyle}"/>
                            <ComboBox x:Name="comboWindowsToCapture" Margin="5,0,0,0" Style="{StaticResource @InputComboBoxStyle}" Width="150"  HorizontalAlignment="Left"/>
                        </StackPanel>
                    </StackPanel>

                    <Grid x:Name="ScreenShotsGrid" Grid.Row="1" Margin="5,10,0,0" Background="{StaticResource $BackgroundColor_LightGray}" />
                </Grid>
            </TabItem>

            <TabItem x:Name="RunTimeTab" Margin="26,0,-30,0"  >
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" >
                        <Image Source="{StaticResource  @Report_32x32 }" Height="20" Width="20" />
                        <TextBlock Text="Run Details" VerticalAlignment="Center" Margin="5,0,0,0" Foreground="{StaticResource $Color_DarkBlue}" FontWeight="Bold" />
                    </StackPanel>
                </TabItem.Header>

                <Grid  x:Name="xActionRunDetails" Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="290*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="100*"/>
                        <RowDefinition Height="100*"/>
                        
                    </Grid.RowDefinitions>

                    <Label Content="Run Status:" Grid.Row="0" HorizontalAlignment="Stretch" Style="{StaticResource @InputFieldLabelStyle}"/>
                    <Label x:Name="RTStatusLabel" Grid.Row="0" Grid.Column="1" FontSize="14" Foreground="{DynamicResource $Color_DarkBlue}" FontWeight="Bold" Style="{StaticResource @InputFieldLabelStyle}"/>

                    <Label Content="Elapsed Time:" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Stretch" Style="{StaticResource @InputFieldLabelStyle}"/>
                    <Label x:Name="RTElapsedLabel" Grid.Row="1" Grid.Column="1" FontSize="14" Foreground="{DynamicResource $Color_DarkBlue}" FontWeight="Bold" Style="{StaticResource @InputFieldLabelStyle}"/>

                    <Label Content="Extra Information:" Grid.Row="2" Grid.Column="0" HorizontalAlignment="Stretch" Style="{StaticResource @InputFieldLabelStyle}"/>
                    <TextBox x:Name="RTExInfoLabel" Grid.Row="2" Grid.Column="1" TextWrapping="Wrap" ScrollViewer.VerticalScrollBarVisibility="Auto" FontSize="12" Style="{StaticResource @MultiRowsTextBoxStyle}" Background="{StaticResource $BackgroundColor_LightGray}" />

                    <Label Content="Error Details:" Grid.Row="3" Grid.Column="0" HorizontalAlignment="Stretch" Style="{StaticResource @InputFieldLabelStyle}"/>
                    <TextBox x:Name="RTErrorLabel" Grid.Row="3" Grid.Column="1" TextWrapping="Wrap" ScrollViewer.VerticalScrollBarVisibility="Auto" IsReadOnly="True" FontSize="14" Foreground="Red" FontWeight="Bold" Style="{StaticResource @MultiRowsTextBoxStyle}" Background="{StaticResource $BackgroundColor_LightGray}"></TextBox>
                </Grid>
            </TabItem>



            <TabItem x:Name="HelpTab" Margin="32,0,-36,0"  >
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" >
                        <Image Source="{StaticResource  @Help_32x32 }" Height="20" Width="20"/>
                        <TextBlock Text="Help" VerticalAlignment="Center" Margin="5,0,0,0" Foreground="{StaticResource $Color_DarkBlue}" FontWeight="Bold" />
                    </StackPanel>
                </TabItem.Header>

                <Frame x:Name="ActDescriptionFrm" Content="Action Description" 
                   NavigationUIVisibility="Hidden"                                  
                   ScrollViewer.VerticalScrollBarVisibility="Auto" 
                   ScrollViewer.CanContentScroll="True"/>
            </TabItem>
        </TabControl>

        <!--Run Status Area-->
        <Expander x:Name="xRunStatusExpander" Grid.Row="2" Margin="0,0,0,0" ExpandDirection="Down" IsExpanded="True" Expanded="xRunStatusExpander_Expanded" Collapsed="xRunStatusExpander_Collapsed" Style="{StaticResource @ExpanderLightStyle}">
            <Expander.Header>
                <Label Content="Run Status" Style="{StaticResource @HorizontalExpanderLightLabelStyle}"/>
            </Expander.Header>
            <Expander.Content>
                <Grid  Background="{StaticResource $BackgroundColor_LightGray}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="40*"/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="3,0,0,0">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Width="24">
                            <Image x:Name="PassImage" Source="{StaticResource @PassIcon_Large.png}" Width="24" />
                            <Image x:Name="FailImage" Source="{StaticResource @FailIcon_Large.png}" Width="24" />
                            <Image x:Name="WarningImage" Source="{StaticResource @WarnIcon_Large.png}" Width="24"  />
                        </StackPanel>
                        <Label x:Name="StatusLabel" Content="Status" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" />
                    </StackPanel>
                    <ScrollViewer x:Name="ExecutionInfoTextBlockViewer" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                        <DockPanel>
                            <TextBlock x:Name="ErrorTextBlock" DockPanel.Dock="Top" Text="Error Description" Style="{StaticResource @DetailsTextBlockStyle}" Foreground="Red" />
                            <TextBlock x:Name="ExtraInfoTextBlock" DockPanel.Dock="Top" Text="Extra Info Description" Style="{StaticResource @DetailsTextBlockStyle}" />
                        </DockPanel>
                    </ScrollViewer>
                </Grid>
            </Expander.Content>
        </Expander>
        
        
    </Grid>
</Page>
