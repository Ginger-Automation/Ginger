<Page x:Class="Ginger.Actions.ActionEditPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:Ginger="clr-namespace:Ginger"
      xmlns:Actions="clr-namespace:Ginger.Actions"
      xmlns:UCControl="clr-namespace:Ginger.UserControlsLib"
      xmlns:GingerCore="clr-namespace:GingerCore;assembly=GingerCore"
      xmlns:usercontrols="clr-namespace:Amdocs.Ginger.UserControls"
      xmlns:uclistview="clr-namespace:Ginger.UserControlsLib.UCListView"
      mc:Ignorable="d" 
      Title="Edit Action" 
      d:DesignWidth="1000"
      d:DesignHeight="800">

    <Grid Name="xPageGrid" Background="{StaticResource $BackgroundColor_LightGray}">
        <Grid.Resources>
            <DataTemplate x:Key="ValueExpressionButton">
                <Button x:Name="GridVEButton" Content="..." Click="GridVEButton_Click"  Style="{DynamicResource DataGridCellButtonStyle}"/>
            </DataTemplate>
            <DataTemplate x:Key="ParamValueExpressionButton">
                <Button x:Name="GridParamVEButton" Content="..." Click="GridParamVEButton_Click"  Style="{DynamicResource DataGridCellButtonStyle}"/>
            </DataTemplate>
            <DataTemplate x:Key="InputValueExpressionButton">
                <Button x:Name="InputGridVEButton" Content="..." Click="InputGridVEButton_Click"  Style="{DynamicResource DataGridCellButtonStyle}"/>
            </DataTemplate>
            <DataTemplate x:Key="AddActualToExpectButton">
                <Button x:Name="GridAddActualToExpectButton" Content=">>" Click="GridAddActualToExpectButton_Click"  Style="{DynamicResource DataGridCellButtonStyle}" ToolTip="Copy Actual Value to Expected Value"/>
            </DataTemplate>
            <DataTemplate x:Key="AddActualToSimulButton">
                <Button x:Name="GridAddActualToSimulButton" Content="&lt;&lt;" Click="GridAddActualToSimulButton_Click"  Style="{DynamicResource DataGridCellButtonStyle}" ToolTip="Copy Actual Value to Simulated Value"/>
            </DataTemplate>
            <DataTemplate x:Key="PathValueExpressionButton">
                <Button x:Name="GridPathVEButton" Content="..." Click="GridPathVEButton_Click"  Style="{DynamicResource DataGridCellButtonStyle}"/>
            </DataTemplate>
            <DataTemplate x:Key="SimulatedlValueExpressionButton">
                <Button x:Name="GridPathVEButton" Content="..." Click="SimulatedOutputGridVEButton_Click"  Style="{DynamicResource DataGridCellButtonStyle}"/>
            </DataTemplate>
            <DataTemplate x:Key="DataSourceValueExpressionButton">
                <Button x:Name="GridDSVEButton" Content="..." Click="GridDSVEButton_Click"  Style="{DynamicResource DataGridCellButtonStyle}"/>
            </DataTemplate>
            <DataTemplate x:Key="StoreToObject">
                <UCControl:UCStoreTo x:Name="StoreToObj"/>
            </DataTemplate>
            <DataTemplate x:Key="ClearExpectedValueBtnTemplate">
                <Button x:Name="ClearExpectedValueBtn" Content="X" Click="GridClearExpectedValueBtn_Click"  Style="{DynamicResource DataGridCellButtonStyle}" ToolTip="Clear Expected Value"/>
            </DataTemplate>
        </Grid.Resources>

        <Grid>
            <!--Tabs Area-->
            <TabControl x:Name="xActionTabs" Margin="0,0,0,0" HorizontalAlignment="Stretch" SelectionChanged="xActionTabs_SelectionChanged" Background="{StaticResource $BackgroundColor_LightGray}" BorderBrush="{StaticResource $BackgroundColor_DarkBlue}" BorderThickness="0" >
                <TabItem x:Name="xDetailsTab" Style="{StaticResource $CoolTabInInternalPages}" TabIndex="0" Tag="False">
                    <TabItem.Header>
                        <Border Style="{StaticResource $CoolTabBorderStyle}" ToolTip="General Details">
                            <DockPanel >
                                <usercontrols:ImageMakerControl SetAsFontImageWithSize="16" ImageType="Info" Width="16" Height="16" FontWeight="Bold" Foreground="{StaticResource $BackgroundColor_DarkGray}"  />
                                <TextBlock Text="Details" Style="{StaticResource $CoolTabTextBlockStyle}" />
                            </DockPanel>
                        </Border>
                    </TabItem.Header>
                    <Border Margin="5" BorderBrush="{StaticResource $BackgroundColor_DarkBlue}" BorderThickness="1" CornerRadius="3">
                        <ScrollViewer>
                            <Grid x:Name="xActionsDetailsPnl" Margin="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition x:Name="xSharedRepoInstanceUCCol" Width="50"/>
                                </Grid.ColumnDefinitions>
                                <DockPanel Grid.Column="0">
                                    <Label Style="{StaticResource $LabelStyle}" Content="Description:" DockPanel.Dock="Top" HorizontalAlignment="Left"/>
                                    <TextBox x:Name="xDescriptionTextBox" DockPanel.Dock="Top" Style="{StaticResource $TextBoxStyle}" ScrollViewer.VerticalScrollBarVisibility="Auto" VerticalContentAlignment="Top" FontSize="14" FontWeight="Bold" HorizontalAlignment="Stretch" Height="30"/>
                                    <Label Style="{StaticResource $LabelStyle}" Content="Run Description:" DockPanel.Dock="Top"/>
                                    <Actions:UCValueExpression  x:Name="xRunDescritpionUC" DockPanel.Dock="Top" HorizontalAlignment="Stretch"/>
                                    <Ginger:ucTagsViewer x:Name="xTagsViewer" DockPanel.Dock="Top" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                </DockPanel>
                                <Ginger:ucSharedRepoInstance x:Name="xSharedRepoInstanceUC" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,-2,0,0"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </TabItem>

                <TabItem x:Name="xOperationSettingsTab" Style="{StaticResource $CoolTabInInternalPages}" TabIndex="1" Tag="False">
                    <TabItem.Header>
                        <Border Style="{StaticResource $CoolTabBorderStyle}" ToolTip="Operation to Perform Settings">
                            <DockPanel>
                                <usercontrols:ImageMakerControl SetAsFontImageWithSize="16" ImageType="Action" Width="16" Height="16" FontWeight="Bold" Foreground="{StaticResource $BackgroundColor_DarkGray}" />
                                <TextBlock  Text="Operation Settings" Style="{StaticResource $CoolTabTextBlockStyle}" />
                            </DockPanel>
                        </Border>
                    </TabItem.Header>
                    <Border Margin="5" BorderBrush="{StaticResource $BackgroundColor_DarkBlue}" BorderThickness="1" CornerRadius="3">
                        <ScrollViewer>
                            <DockPanel x:Name="xOperationSettingsPnl" Margin="5">
                                <Grid x:Name="xActionLocatorPnl" DockPanel.Dock="Top">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="65" />
                                        <ColumnDefinition Width="200" />
                                        <ColumnDefinition Width="85" />
                                        <ColumnDefinition Width="200*" />
                                        <ColumnDefinition Width="30" />
                                        <ColumnDefinition Width="30" />
                                        <ColumnDefinition Width="30" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="Locate By:" Style="{StaticResource $LabelStyle}" VerticalAlignment="Center"/>
                                    <ComboBox Grid.Column="1" x:Name="xLocateByCombo" SelectionChanged="cboLocateBy_SelectionChanged" Style="{StaticResource $FlatInputComboBoxStyle}" ToolTip="How to Locate the Element on the screen" VerticalAlignment="Center" />
                                    <Label Grid.Column="2" Content="Locate Value:" Style="{StaticResource $LabelStyle}" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                                    <Actions:UCValueExpression x:Name="xLocateValueVE" Grid.Column="3" HorizontalAlignment="Stretch" VerticalAlignment="Center"  />
                                    <usercontrols:ucButton x:Name="xEditLocatorBtn" Grid.Column="4"  ButtonType="ImageButton" Click="btnEditLocator_Click" ToolTip="Edit"  ButtonFontImageSize="15"  ButtonImageType="Edit" VerticalAlignment="Center" />
                                    <usercontrols:ucButton x:Name="xControlSelectorButton" Grid.Column="5"  ButtonType="ImageButton" Click="ControlSelectorButton_Click" ToolTip="Open Window Explorer to select Element"  ButtonFontImageSize="15"  ButtonImageType="Search" VerticalAlignment="Center" />
                                    <usercontrols:ucButton x:Name="xHighLightElementButton" Grid.Column="6"  ButtonType="ImageButton" Click="HighLightElementButton_Click" ToolTip="Highlight Element on Application"  ButtonFontImageSize="15"  ButtonImageType="Pointer" VerticalAlignment="Center" />
                                </Grid>

                                <Frame x:Name="xActionPrivateConfigsFrame" DockPanel.Dock="Top" Margin="0,0,0,0"  Content="Action private configurations Frame" NavigationUIVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True"/>

                                <DockPanel Name="xInputValuesEditControlsPnl" DockPanel.Dock="Top" >
                                    <Ginger:ucGrid x:Name="xInputValuesGrid" DockPanel.Dock="Top" Margin="0,10,0,0" Visibility="Collapsed" HorizontalAlignment="Stretch" Title="Input Value(s)" Height="156"/>
                                    <DockPanel Name="xValueBoxPnl" DockPanel.Dock="Top" VerticalAlignment="Top" Margin="0,10,0,0" Height="25">
                                        <Label Name="xValueLbl" DockPanel.Dock="Left" Style="{StaticResource $LabelStyle}" Content="Value:"/>
                                        <Actions:UCValueExpression x:Name="xValueVE" DockPanel.Dock="Left" Margin="10,0,0,0" ToolTip="Value to Set"/>
                                    </DockPanel>
                                </DockPanel>

                            </DockPanel>
                        </ScrollViewer>
                    </Border>
                </TabItem>

                <TabItem x:Name="xFlowControlTab" Style="{StaticResource $CoolTabInInternalPages}" TabIndex="2" Tag="False">
                    <TabItem.Header>
                        <Border Style="{StaticResource $CoolTabBorderStyle}" ToolTip="Flow Control Configurations">
                            <DockPanel >
                                <usercontrols:ImageMakerControl SetAsFontImageWithSize="16" ImageType="MapSigns" Width="16" Height="16" FontWeight="Bold" Foreground="{StaticResource $BackgroundColor_DarkGray}"  />
                                <TextBlock x:Name="xFlowControlTabHeaderTextBlock" Text="Flow Control" Style="{StaticResource $CoolTabTextBlockStyle}" />
                            </DockPanel>
                        </Border>
                    </TabItem.Header>
                    <Border Margin="5" BorderBrush="{StaticResource $BackgroundColor_DarkBlue}" BorderThickness="1" CornerRadius="3">
                        <ScrollViewer>
                            <DockPanel Margin="5" >
                                <StackPanel x:Name="xWaitTimeoutPnl"  DockPanel.Dock="Top" Orientation="Horizontal"  HorizontalAlignment="Left" Margin="0,5,0,0">
                                    <Label Content="Wait:" Style="{StaticResource $LabelStyle}" />
                                    <Actions:UCValueExpression x:Name="xWaitVeUC" ToolTip="Action will wait this seconds long before start to run" HorizontalAlignment="Stretch" Width="80" />
                                    <Label Content="Timeout:" Style="{StaticResource $LabelStyle}" Margin="10,0,0,0"/>
                                    <TextBox x:Name="xTimeoutTextBox" TextChanged="txtTimeout_TextChanged" ToolTip="Timeout is been used to configure the MAXIMUM allowed time (Action can finish before) for the Action to run. If action running longer than the timeout time (seconds), the action will stop and mark as Failed" Style="{StaticResource @TextBoxStyle}" Width="50" TextAlignment="Center"  HorizontalAlignment="Left" />
                                </StackPanel>

                                <Expander x:Name="xRetryExpander" DockPanel.Dock="Top" Margin="0,10,0,0" ExpandDirection="Down" IsExpanded="False" Style="{StaticResource $ExpanderStyle}">
                                    <Expander.Header>
                                        <Label Content="Retry Mechanism" Style="{StaticResource $HorizontalExpanderLabelStyle}"/>
                                    </Expander.Header>
                                    <Expander.Content>
                                        <StackPanel x:Name="xRetryMechanismPnl" Margin="5" >
                                            <CheckBox x:Name="xEnableRetryMechanismCheckBox" Content="Enable Retry Mechanism" FontWeight="Bold" Style="{StaticResource $CeckBoxStyle}" Checked="XEnableRetryMechanismCheckBox_CheckChanged" Unchecked="XEnableRetryMechanismCheckBox_CheckChanged"/>
                                            <StackPanel x:Name="xRetryMechConfigsPnl" Margin="0,5,0,0">
                                                <StackPanel Orientation="Horizontal" >
                                                    <Label Style="{StaticResource $LabelStyle}">Interval (seconds):</Label>
                                                    <TextBox x:Name="xRetryMechanismIntervalTextBox" Style="{StaticResource $TextBoxStyle}" ToolTip="Number of seconds to wait before re-run" Width="50" Text="5" TextAlignment="Center" Margin="0,0,0,0" />
                                                    <Label Style="{StaticResource $LabelStyle}" Margin="10,0,0,0">Max Retries Number:</Label>
                                                    <TextBox x:Name="xRetryMechanismMaxRetriesTextBox" Style="{StaticResource $TextBoxStyle}" ToolTip="Max number of retries before finally failing the action" Width="50" TextAlignment="Center" Text="3"></TextBox>
                                                </StackPanel>
                                                <Label HorizontalAlignment="Left" FontSize="10" Margin="-5,0,0,0" Style="{StaticResource $LabelStyle}">Note: Retry mechanism is executed after error handler and before flow control.</Label>
                                            </StackPanel>
                                        </StackPanel>
                                    </Expander.Content>
                                </Expander>

                                <Expander x:Name="xFlowControlConditionsExpander" DockPanel.Dock="Top" Margin="0,10,0,0" ExpandDirection="Down" IsExpanded="False" Style="{StaticResource $ExpanderStyle}" VerticalAlignment="Top">
                                    <Expander.Header>
                                        <Label Content="Flow Control Conditions" Style="{StaticResource $HorizontalExpanderLabelStyle}"/>
                                    </Expander.Header>
                                    <Expander.Content>
                                        <Frame x:Name="xFlowControlConditionsFrame" Margin="5,5,5,20" Content="Flow Control Conditions Frame" NavigationUIVisibility="Hidden"/>
                                    </Expander.Content>
                                </Expander>
                            </DockPanel>
                        </ScrollViewer>
                    </Border>
                </TabItem>

                <TabItem x:Name="xOutputValuesTab" Style="{StaticResource $CoolTabInInternalPages}" TabIndex="3" Tag="False">
                    <TabItem.Header>
                        <Border Style="{StaticResource $CoolTabBorderStyle}" ToolTip="Execution Output Values" >
                            <DockPanel >
                                <usercontrols:ImageMakerControl SetAsFontImageWithSize="16" ImageType="Output" Width="16" Height="16" FontWeight="Bold" Foreground="{StaticResource $BackgroundColor_DarkGray}" />
                                <TextBlock x:Name="xOutputValuesTabHeaderTextBlock" Text="Output Values" Style="{StaticResource $CoolTabTextBlockStyle}" />
                            </DockPanel>
                        </Border>
                    </TabItem.Header>
                    <Border Margin="5" BorderBrush="{StaticResource $BackgroundColor_DarkBlue}" BorderThickness="1" CornerRadius="3">
                        <ScrollViewer>
                            <DockPanel Margin="5">
                                <Expander x:Name="xDataSourceExpander" DockPanel.Dock="Top" ExpandDirection="Down" IsExpanded="False" Grid.Row="0" Style="{StaticResource $ExpanderStyle}" Expanded="xDataSourceExpander_Expanded">
                                    <Expander.Header>
                                        <Label x:Name="DataSourceExpanderLabel" Style="{StaticResource $HorizontalExpanderLabelStyle}">
                                            <Label.Content>
                                                <GingerCore:ucTextDicResource Text="Outputs to Data Source Settings"/>
                                            </Label.Content>
                                        </Label>
                                    </Expander.Header>
                                    <Expander.Content>
                                        <StackPanel x:Name="xAddOutputToDataSourcePnl" Margin="5" Background="{StaticResource $BackgroundColor_LightGray}">
                                            <CheckBox Name="xAddOutToDSCheckbox" Content="Add Output Value/s to Data Source" Checked="AddOutDS_Checked"  Unchecked="AddOutDS_Unchecked" HorizontalAlignment="Left" Style="{StaticResource $CeckBoxStyle}" FontWeight="Bold"/>
                                            <DockPanel x:Name="xAddOutputToDataSourceConfigPnl" >
                                                <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" Margin="0,5,0,5">
                                                    <Label HorizontalAlignment="Left"  VerticalAlignment="Center" Style="{StaticResource $LabelStyle}">Data Source:</Label>
                                                    <ComboBox Name="xDataSourceNameCombo" HorizontalAlignment="Left" IsReadOnly="True" Style="{StaticResource $FlatInputComboBoxStyle}"  Width="200" SelectionChanged="cmbDataSourceName_SelectionChanged"/>
                                                    <Label HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0" Style="{StaticResource $LabelStyle}">Data Source Table:</Label>
                                                    <ComboBox Name="xDataSourceTableNameCombo" HorizontalAlignment="Left" IsReadOnly="True" Style="{StaticResource $FlatInputComboBoxStyle}" Margin="0,0,0,0" Width="200" SelectionChanged="cmbDataSourceTableName_SelectionChanged"></ComboBox>
                                                </StackPanel>
                                                <Ginger:ucGrid x:Name="xDataSourceConfigGrid" Title="Output Value/s Parameters - Data Source Table Columns Mapping Configurations " ShowAdd="Collapsed" ShowDelete="Collapsed" ShowUpDown="Collapsed" ShowClearAll="Collapsed" ShowEdit="Collapsed" ShowRefresh="Collapsed" Margin="0,0,0,10" />
                                            </DockPanel>
                                        </StackPanel>
                                    </Expander.Content>
                                </Expander>

                                <Expander x:Name="xOutputValuesExpander" DockPanel.Dock="Top" Margin="0,10,0,0" ExpandDirection="Down" IsExpanded="False" Style="{StaticResource $ExpanderStyle}" VerticalAlignment="Top">
                                    <Expander.Header>
                                        <Label Content="Execution Output Values" Style="{StaticResource $HorizontalExpanderLabelStyle}"/>
                                    </Expander.Header>
                                    <Expander.Content>
                                        <Ginger:ucGrid x:Name="xOutputValuesGrid" Margin="5,5,5,20" ShowTitle="Collapsed" ShowRefresh="Collapsed" />
                                    </Expander.Content>
                                </Expander>
                            </DockPanel>
                        </ScrollViewer>
                    </Border>
                </TabItem>

                <TabItem x:Name="xExecutionReportTab" Style="{StaticResource $CoolTabInInternalPages}" TabIndex="5" Tag="False">
                    <TabItem.Header>
                        <Border Style="{StaticResource $CoolTabBorderStyle}">
                            <DockPanel Margin="0,5,0,0">
                                <!--<usercontrols:ImageMakerControl SetAsFontImageWithSize="16" ImageType="Pending" Width="16" Height="16" FontWeight="Bold" Foreground="{StaticResource $BackgroundColor_DarkGray}" />-->
                                <TextBlock Text="Execution Report" Style="{StaticResource $CoolTabTextBlockStyle}" />
                                <uclistview:UcItemExecutionStatus x:Name="xExecutionStatusTabImage" StatusViewMode="Polygon"/>
                            </DockPanel>
                        </Border>
                    </TabItem.Header>
                    <Border Margin="5" BorderBrush="{StaticResource $BackgroundColor_DarkBlue}" BorderThickness="1" CornerRadius="3">
                        <ScrollViewer>
                            <DockPanel Margin="5">
                                <Expander x:Name="xExecutionDetailsRelatedSettingsExpander" DockPanel.Dock="Top" ExpandDirection="Down" IsExpanded="True" Style="{StaticResource $ExpanderStyle}">
                                    <Expander.Header>
                                        <Label Style="{StaticResource $HorizontalExpanderLabelStyle}">
                                            <Label.Content>
                                                <GingerCore:ucTextDicResource Text="Execution Details Related Settings"/>
                                            </Label.Content>
                                        </Label>
                                    </Expander.Header>
                                    <Expander.Content>
                                        <DockPanel x:Name="xExecutionReportConfigPnl" Margin="5">
                                            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" ToolTip="Status Conversion will be performed only after flow control is executed. So that flow control will always use the original action status">
                                                <Label Content="Status Converter:" Style="{StaticResource $LabelStyle}" />
                                                <ComboBox x:Name="xStatusConvertorCombo" Style="{StaticResource $FlatInputComboBoxStyle}" Width="150" HorizontalAlignment="Left"/>
                                                <CheckBox x:Name="xFailIgnoreCheckBox" Content="Ignore on Fail" Visibility="Collapsed" ToolTip="If the action fails change status to Ignore Fail" Margin="10,0,0,0" Style="{StaticResource $CeckBoxStyle}"/>
                                            </StackPanel>

                                            <StackPanel x:Name="xScreenshotsConfigsPnl" DockPanel.Dock="Top" Orientation="Horizontal" Margin="0,10,0,0">
                                                <CheckBox x:Name="xTakeScreenShotCheckBox" DockPanel.Dock="Top" Content="Take Screenshot(s)" FontWeight="Bold" ToolTip="Add tested application screenshot to the report after the action executed" Style="{StaticResource $CeckBoxStyle}" VerticalAlignment="Center" Checked="XTakeScreenShotCheckBox_CheckChanged" Unchecked="XTakeScreenShotCheckBox_CheckChanged" />
                                                <StackPanel x:Name="xScreenshotsCaptureTypeConfigsPnl" Orientation="Horizontal" DockPanel.Dock="Top" Margin="20,0,0,0"  Visibility="Visible">
                                                    <Label Content="Capture Type:" Style="{StaticResource $LabelStyle}" VerticalAlignment="Center"/>
                                                    <ComboBox x:Name="xWindowsToCaptureCombo" Margin="0,0,0,0" Style="{StaticResource $FlatInputComboBoxStyle}" Width="200" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </StackPanel>

                                            <DockPanel x:Name="xActionLogPnl" Margin="0,10,0,0" >
                                                <CheckBox x:Name="xEnableActionLogConfigCheckBox" DockPanel.Dock="Top" Content="Enable Action Log" HorizontalAlignment="Left" FontWeight="Bold" Style="{StaticResource $CeckBoxStyle}" Checked="EnableActionLogConfigCheckBox_Checked" Unchecked="EnableActionLogConfigCheckBox_UnChecked"/>
                                                <Frame x:Name="xActionLogConfigFrame" DockPanel.Dock="Top" Margin="10,10,0,0" NavigationUIVisibility="Hidden"/>
                                            </DockPanel>
                                        </DockPanel>
                                    </Expander.Content>
                                </Expander>

                                <Expander x:Name="xExecutionDetailsExpander" DockPanel.Dock="Top" ExpandDirection="Down" IsExpanded="True" Style="{StaticResource $ExpanderStyle}" Margin="0,10,0,0" VerticalAlignment="Top">
                                    <Expander.Header>
                                        <Label Style="{StaticResource $HorizontalExpanderLabelStyle}">
                                            <Label.Content>
                                                <GingerCore:ucTextDicResource Text="Execution Details"/>
                                            </Label.Content>
                                        </Label>
                                    </Expander.Header>
                                    <Expander.Content>
                                        <DockPanel  x:Name="xActionRunDetailsPnl"  DockPanel.Dock="Top" Margin="5">
                                            <Grid DockPanel.Dock="Top">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="100*"/>
                                                    <ColumnDefinition Width="100"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0" >
                                                    <Label Content="Execution Status:"  Style="{StaticResource $LabelStyle}" VerticalAlignment="Bottom"/>
                                                    <Label x:Name="xExecutionStatusLbl" FontSize="15" FontWeight="Bold" Style="{StaticResource $LabelStyle}" VerticalAlignment="Bottom" />
                                                </StackPanel>

                                                <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="0" Margin="0,10,0,0">
                                                    <Label Content="Execution Time (ms):"  Style="{StaticResource $LabelStyle}" VerticalAlignment="Bottom"/>
                                                    <Label x:Name="xExecutionTimeLbl" Style="{StaticResource $LabelStyle}"/>
                                                </StackPanel>

                                                <DockPanel x:Name="xExecutionStatusImagePnl" Height="50" Grid.RowSpan="2" Grid.Column="1"/>
                                            </Grid>

                                            <StackPanel x:Name="xExecutionExtraInfoPnl" DockPanel.Dock="Top" Margin="0,10,0,0">
                                                <Label Content="Extra Information:" Style="{StaticResource $LabelStyle}"/>
                                                <TextBox x:Name="xExecutionExtraInfoText" TextWrapping="Wrap" ScrollViewer.VerticalScrollBarVisibility="Auto" IsReadOnly="True" FontSize="12" Style="{StaticResource $MultiRowsTextBoxStyle}" Background="Transparent" Height="100"/>
                                            </StackPanel>

                                            <StackPanel x:Name="xExecutionErrorDetailsPnl" DockPanel.Dock="Top" Margin="0,10,0,0">
                                                <Label Content="Error Details:" Style="{StaticResource $LabelStyle}"/>
                                                <TextBox x:Name="xExecutionErrorDetailsText" TextWrapping="Wrap" ScrollViewer.VerticalScrollBarVisibility="Auto" IsReadOnly="True" FontSize="12" Style="{StaticResource $MultiRowsTextBoxStyle}" Foreground="Red" FontWeight="Bold" Background="Transparent" Height="100"/>
                                            </StackPanel>

                                            <DockPanel x:Name="xScreenShotsPnl" DockPanel.Dock="Top" Margin="0,10,0,0" >
                                                <Label Content="Screenshots:" DockPanel.Dock="Top" Style="{StaticResource $LabelStyle}"/>
                                                <!--<Grid x:Name="xScreenShotsGrid" DockPanel.Dock="Top" Margin="10"/>-->
                                                <Border BorderThickness="1" BorderBrush="{StaticResource $BackgroundColor_DarkBlue}">
                                                    <DockPanel x:Name="xScreenShotsViewPnl" DockPanel.Dock="Top" Margin="10"/>
                                                </Border>
                                            </DockPanel>
                                        </DockPanel>
                                    </Expander.Content>
                                </Expander>
                            </DockPanel>
                        </ScrollViewer>
                    </Border>
                </TabItem>

                <TabItem x:Name="xHelpTab" Style="{StaticResource $TransparentTabHeader}" TabIndex="6" Tag="False">
                    <!--<TabItem.Header>
                        <Border Style="{StaticResource $CoolTabBorderStyle}" ToolTip="Help Details">
                            <DockPanel >
                                <usercontrols:ImageMakerControl SetAsFontImageWithSize="16" ImageType="Help" Width="16" Height="16" FontWeight="Bold" Foreground="{StaticResource $BackgroundColor_DarkGray}"  />
                                <TextBlock  Text="Help" Style="{StaticResource $CoolTabTextBlockStyle}" />
                            </DockPanel>
                        </Border>
                    </TabItem.Header>-->
                    <Border Margin="5" DockPanel.Dock="Top" BorderBrush="{StaticResource $BackgroundColor_DarkBlue}" BorderThickness="1" CornerRadius="3">
                        <ScrollViewer>
                            <Frame x:Name="xActionHelpDetailsFram" Margin="10" Content="Action Description" NavigationUIVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True"/>
                        </ScrollViewer>
                    </Border>
                </TabItem>
            </TabControl>
            <usercontrols:ucButton x:Name="xHelpButton" VerticalAlignment="Top" HorizontalAlignment="Right" ButtonFontImageSize="16" ButtonType="ImageButton" ButtonImageType="Help" Click="XHelpButton_Click" ToolTip="View Action help info" Margin="0,0,5,0" />
        </Grid>
    </Grid>
</Page>
