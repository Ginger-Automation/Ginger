    <Page x:Class="Ginger.Actions.ActExcelEditPage" xmlns:Actions="clr-namespace:Ginger.Actions" 
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      mc:Ignorable="d" 
      d:DesignHeight="380" d:DesignWidth="700"
	Title="ActExcelEditPage" >

    <Grid Margin="0,0,0,0" Background="{StaticResource $BackgroundColor_LightGray}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250*"/>
            <ColumnDefinition Width="250*"/>
            <ColumnDefinition Width="60"/>            
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="55"/>
            <RowDefinition Height="55"/>
            <RowDefinition Height="*"/>        
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Grid.ColumnSpan="3">
            <Label Style="{StaticResource @InputFieldLabelStyle}">Excel Action:</Label>
            <ComboBox x:Name="ExcelActionComboBox" SelectionChanged="ExcelActionComboBox_SelectionChanged" Style="{StaticResource @InputComboBoxStyle}" Width="250" HorizontalAlignment="Left"/>            
        </StackPanel>
        
        <StackPanel Grid.Row="1" Grid.ColumnSpan="2">
            <Label Style="{StaticResource @InputFieldLabelStyle}">Excel File Path:</Label>
            <Actions:UCValueExpression x:Name="ExcelFileNameTextBox" ToolTip="Excel file full/relative path"/>           
        </StackPanel>
        <Button x:Name="BrowseExcelButton" Content="Browse" Grid.Row="1" Grid.Column="2" Click="BrowseExcelButton_Click" HorizontalAlignment="Left" VerticalAlignment="Bottom" Style="{StaticResource @InputButtonStyle}" Margin="5,0,5,3"/>

        <StackPanel Grid.Row="2" Grid.Column="0" Margin="0,0,2,0">
            <StackPanel>
                <Label Style="{StaticResource @InputFieldLabelStyle}">Sheet Name:</Label>
                <DockPanel>
                    <ComboBox x:Name="SheetNamComboBox" SelectionChanged="SheetNamComboBox_SelectionChanged" DropDownOpened="SheetNamComboBox_DropDownOpened" Style="{StaticResource @InputComboBoxStyle}" IsEditable="True" HorizontalAlignment="Stretch" DockPanel.Dock="Left" Width="250"></ComboBox>
                    <Button x:Name="SheetNamVEButton" Content="..." Click="SheetNamVEButton_Click" HorizontalAlignment="Left" DockPanel.Dock="Left" VerticalAlignment="Center" Style="{StaticResource @InputButtonStyle}" Margin="1,0,5,0" Width="30" Height="24"/>
                </DockPanel>
            </StackPanel>

            <StackPanel>
                <Label Style="{StaticResource @InputFieldLabelStyle}">Select Row(s) Where:</Label>
                <Actions:UCValueExpression x:Name="SelectRowsWhereTextBox" Margin="0,0,105,0" ToolTip="[Column Name]=Value to filter the rows by, like: Available='Yes' or Num=1 or [Team Name]='Ginger'."/>
                <CheckBox x:Name="SelectAllRows" ToolTip="Select all Rows" HorizontalAlignment="Right" IsChecked="False" Margin="0,-20,0,0" Style="{StaticResource @CheckBoxStyle}">Select All Rows</CheckBox>
            </StackPanel>

            <StackPanel>
                <Label Style="{StaticResource @InputFieldLabelStyle}">Primary Key Column:</Label>
                <Actions:UCValueExpression x:Name="PrimaryKeyColumnTextBox" ToolTip="Unique ColumnName to identify the single row by, like: ID"/>
            </StackPanel>

            <StackPanel x:Name="SetDataUsedSection" Visibility="Visible">
                <Label Style="{StaticResource @InputFieldLabelStyle}">Set Data Used Value:</Label>
                <Actions:UCValueExpression x:Name="SetDataUsedTextBox" ToolTip="[Column Name1]=Value1, ColumnName2=Value2... to update after row was used, like: Used='Y', [Updated By]='Ginger'"/>
            </StackPanel>

            <StackPanel x:Name="ColMappingRulesSection" Visibility="Collapsed">
                <Label Style="{StaticResource @InputFieldLabelStyle}">Data To Write:</Label>
                <Actions:UCValueExpression x:Name="ColMappingRulesTextBox" ToolTip="[Column Name1]=Value1, ColumnName2=Value2... values to write, like: FirstName='John', [Last Name]='Smit'"/>
            </StackPanel>                       
        </StackPanel>

        <GridSplitter x:Name="GridSplitter" ResizeDirection="Columns" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2" Width="5" HorizontalAlignment="Left" VerticalAlignment="Stretch" Background="{StaticResource $Color_DarkBlue}" IsEnabled="False" Margin="0,0,0,0" />
        
        <DockPanel Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="5,0,0,0">
            <DockPanel DockPanel.Dock="Top">
                <Label Style="{StaticResource @InputFieldLabelStyle}" DockPanel.Dock="Left">Excel Data:</Label>
                <Button x:Name="ViewWhereButton"  Style="{StaticResource @InputButtonStyle}" Click="ViewWhereButton_Click" Content="View Filtered Data" DockPanel.Dock="Right" HorizontalAlignment="Right" Width="110" Padding="5,0,5,0" Margin="5,0,5,0" />
                <Button x:Name="ViewDataButton"  Style="{StaticResource @InputButtonStyle}" Click="ViewDataButton_Click" Content="View All Data" DockPanel.Dock="Right" HorizontalAlignment="Right" Width="90" Padding="5,0,5,0" Margin="5,0,5,0" />
                <Button x:Name="xOpenExcelButton"  Style="{StaticResource @InputButtonStyle}" Click="xOpenExcelButton_Click" Content="Open Excel" DockPanel.Dock="Right" HorizontalAlignment="Right" Width="80" Padding="5,0,5,0" Margin="5,0,5,0" />
            </DockPanel>

            <DataGrid x:Name="ExcelDataGrid" DockPanel.Dock="Top">
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="DataGridColumnHeader">
                                    
                                    <ContentPresenter RecognizesAccessKey="False"></ContentPresenter>                                
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.ColumnHeaderStyle>
            </DataGrid>
        </DockPanel>
    </Grid>   
</Page>
