<Page x:Class="Ginger.ApplicationModelsLib.POMModels.PomElementsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Ginger.ApplicationModelsLib.POMModels"
      xmlns:Ginger="clr-namespace:Ginger"
      xmlns:UserControls="clr-namespace:Amdocs.Ginger.UserControls"
      xmlns:local1="clr-namespace:Ginger.ApplicationModelsLib"
      mc:Ignorable="d" 
      d:DesignHeight="800" d:DesignWidth="1200"
      Title="PomElementsPage">

    <Grid x:Name="PageGrid">
        <Grid.Resources>
            <local1:ButtonToDisableConverter x:Key="ButtonToDisableConverter"/>

            <DataTemplate x:Key="OpenEditOptionalValuesPage">
                <Button x:Name="OpenEditOptionalValuesPageButton" Content="..." Click="OpenEditOptionalValuesPageButton_Click"  Style="{DynamicResource DataGridCellButtonStyle}"
                        IsEnabled="{Binding ElementTypeEnum, Converter={StaticResource ButtonToDisableConverter}}" />
            </DataTemplate>

            <DataTemplate x:Key="FieldUpdate">
                <CheckBox x:Name="xElementsGrid_FieldUpdate"  Style="{StaticResource @GridCellCheckBoxStyle}" IsEnabled="{Binding IsNotEqual, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" IsChecked="{Binding IsSelected ,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  HorizontalAlignment="Center"/>
            </DataTemplate>

            <DataTemplate x:Key="xHighlightButtonTemplate">
                <Button x:Name="HighlightButton" Click="HighlightElementClicked" ToolTip="Highlight Element" Style="{StaticResource @InputImageGridCellButtonStyle}">
                    <UserControls:ImageMakerControl ImageType="Pointer" SetAsFontImageWithSize="16"  Width="16" Height="16" />
                </Button>
            </DataTemplate>

            <DataTemplate x:Key="xTestElementButtonTemplate">
                <Button x:Name="TestElementButton" Click="TestElementButtonClicked" ToolTip="Highlight Element" Style="{StaticResource @InputImageGridCellButtonStyle}">
                    <UserControls:ImageMakerControl ImageType="Run" SetAsFontImageWithSize="16"  Width="16" Height="16" />
                </Button>
            </DataTemplate>

            <DataTemplate x:Key="xLocateValueVETemplate">
                <Button x:Name="xLocateValueVEButton" Click="XLocateValueVEButton_Click" Content="..." ToolTip="Locate Value Expression" Style="{StaticResource DataGridCellButtonStyle}" ></Button>
            </DataTemplate>
            <DataTemplate x:Key="xPropertyValueVETemplate">
                <Button x:Name="xPropertyValueVEButton" Click="xPropertyValueVEButton_Click" Content="..." ToolTip="Property Value Expression" Style="{StaticResource DataGridCellButtonStyle}" ></Button>
            </DataTemplate>

            <DataTemplate  x:Key="xTestStatusIconTemplate">
                <UserControls:ImageMakerControl x:Name="xStatusIconImageMakerControl" ImageType="{Binding StatusIcon}" ImageToolTip="{Binding StatusError}" SetAsFontImageWithSize="16"  Width="16" Height="16" />
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding StatusIcon , Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Value="Passed">
                        <Setter Property="DataGridCell.Foreground" TargetName="xStatusIconImageMakerControl" Value="Green"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding StatusIcon , Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Value="Unknown">
                        <Setter Property="DataGridCell.Foreground" TargetName="xStatusIconImageMakerControl" Value="Gray"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding StatusIcon , Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Value="Failed">
                        <Setter Property="DataGridCell.Foreground" TargetName="xStatusIconImageMakerControl" Value="Red"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding StatusIcon , Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Value="Pending">
                        <Setter Property="DataGridCell.Foreground" TargetName="xStatusIconImageMakerControl" Value="Orange"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition x:Name="Row1" Height="250*" MinHeight="35"/>
            <RowDefinition  x:Name="Row2" Height="250" MinHeight="35"/>
        </Grid.RowDefinitions>
        <Ginger:ucGrid ScrollViewer.CanContentScroll="True" x:Name="xMainElementsGrid" Grid.Row="0" Title="Mapped Elements" ShowTitle="Collapsed" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ShowRefresh="Collapsed" ShowCopy="Visible" ShowPaste="Visible" ShowCut="Collapsed" ShowEdit="Collapsed" ShowClearAll="Collapsed" ShowUpDown="Visible"/>
        <GridSplitter x:Name="RowSplitter" Grid.Row="0" ResizeDirection="Rows"  Height="5" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Background="{StaticResource $Color_DarkBlue}" />

        <ScrollViewer Grid.Row="1"  HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
            <Expander ScrollViewer.CanContentScroll="True" x:Name="xDetailsExpander"  ExpandDirection="Down" Expanded="DetailsGrid_Expanded" IsExpanded="True" IsEnabled="True" Collapsed="DetailsGrid_Collapsed" Style="{StaticResource @ExpanderLightStyle}">
                <Expander.Header>
                    <StackPanel Orientation="Horizontal">
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="50"/>
                            </Grid.ColumnDefinitions>
                            <Label x:Name="xDetailsExpanderLabel" Grid.Column="0" Content="Details" Style="{StaticResource @HorizontalExpanderLightLabelStyle}" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                        </Grid>
                    </StackPanel>
                </Expander.Header>
                <Expander.Content>
                    <Ginger:UCElementDetails x:Name="xElementDetails" ShowActionTab="False" />
                </Expander.Content>
            </Expander>
        </ScrollViewer>
    </Grid>
</Page>
