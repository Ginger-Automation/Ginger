<UserControl x:Class="Ginger.UserControlsLib.ConsumerComboBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Ginger.UserControlsLib"     
             xmlns:fa="http://schemas.fontawesome.com/icons/"
             >

    <!--IsChecked="{Binding Path=IsSelected, Mode=TwoWay}"-->
    <ComboBox
        x:Name="ConsumerCombo"  
        SnapsToDevicePixels="True"
        OverridesDefaultStyle="True"
        ScrollViewer.HorizontalScrollBarVisibility="Auto"
        ScrollViewer.VerticalScrollBarVisibility="Auto"
        ScrollViewer.CanContentScroll="True"
        IsSynchronizedWithCurrentItem="True" Style="{StaticResource $FlatInputComboBoxStyle}" 
        MouseEnter="ConsumerCombo_MouseEnter">
        <ComboBox.ItemTemplate>
            <DataTemplate>
                <CheckBox Content="{Binding Title}"
                          IsChecked="{Binding Path=IsSelected, Mode=TwoWay}"
                          Tag="{RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}"
                           Click="ConsumerCheckBox_Click" />
            </DataTemplate>
        </ComboBox.ItemTemplate>
        <ComboBox.Template>
            <ControlTemplate TargetType="ComboBox">
                <Grid>
                    <ToggleButton 
                        Name="ToggleButton" Content="{Binding Path=Text,Mode=TwoWay,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                       Grid.Column="2" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="false"                    
                        ClickMode="Press" HorizontalContentAlignment="Left" Background="Transparent" BorderBrush="Black" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" FontWeight="Normal" BorderThickness="0,0,0,1" Margin="0 0 0 1">
                    </ToggleButton>
                    <fa:FontAwesome x:Name="xFAFont" FontWeight="Normal" Foreground="{StaticResource $SelectionColor_LightBlue}" Icon="Solid_AngleDown"  HorizontalAlignment="Right"  VerticalAlignment="Center"  FontSize="14" Margin="0 0 5 0"/>
                    <Popup 
                        Name="Popup"
                        Placement="Bottom"                        
                        AllowsTransparency="False" 
                        Focusable="False"  IsOpen="{TemplateBinding IsDropDownOpen}"
                        PopupAnimation="Slide" >
                        <Grid Name="DropDown" SnapsToDevicePixels="True"  
                            MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}" Background="White">
                            <Border 
                                   x:Name="DropDownBorder"
                                   BorderThickness="1"
                                   BorderBrush="Black" />
                            <ScrollViewer Margin="0" SnapsToDevicePixels="True" DataContext="{Binding}">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                            </ScrollViewer>
                        </Grid>
                    </Popup>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="HasItems" Value="false">
                        <Setter TargetName="DropDownBorder" Property="MinHeight" Value="70"/>
                    </Trigger>
                    <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="false">
                        <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ComboBox.Template>
    </ComboBox>
</UserControl>
