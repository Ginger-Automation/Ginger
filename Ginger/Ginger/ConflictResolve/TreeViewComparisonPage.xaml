<Page x:Class="Ginger.ConflictResolve.TreeViewComparisonPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Ginger.ConflictResolve"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="TreeViewComparisonPage"
      xmlns:conflictResolve="clr-namespace:Ginger.ConflictResolve"
      xmlns:UCTreeView="clr-namespace:GingerWPF.UserControlsLib.UCTreeView">

    <Grid>
        <UCTreeView:UCTreeView x:Name="xUCTree"/>
        <!--<TreeView x:Name="xTree">
            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem">
                    <Setter Property="IsExpanded" Value="True"/>
                </Style>
            </TreeView.ItemContainerStyle>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding ChildComparisons}">
                    <StackPanel Orientation="Horizontal">
                        <CheckBox IsChecked="{Binding Selected}">
                            <CheckBox.Style>
                                <Style TargetType="CheckBox">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding State}" Value="{x:Static conflictResolve:State.Added}">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            --><!--<Setter Property="IsChecked" Value="{Binding Path=Selected, Mode=TwoWay}"/>--><!--
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding State}" Value="{x:Static conflictResolve:State.Deleted}">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            --><!--<Setter Property="IsChecked" Value="{Binding Path=Selected, Mode=TwoWay}"/>--><!--
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding State}" Value="{x:Static conflictResolve:State.Modified}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            --><!--<Setter Property="IsChecked" Value="False"/>--><!--
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding State}" Value="{x:Static conflictResolve:State.Unmodified}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            --><!--<Setter Property="IsChecked" Value="False"/>--><!--
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>
                        <TextBlock Text="{Binding Path=Name}" 
                                   FontWeight="Bold"/>
                        <TextBlock Text=":"/>
                        <TextBlock>
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding HasChildComparisons}" Value="True">
                                            <Setter Property="Text" Value=""/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding HasChildComparisons}" Value="False">
                                            <Setter Property="Text" Value="{Binding Value}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <StackPanel.Style>
                            <Style TargetType="{x:Type StackPanel}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding State}" 
                                                 Value="{x:Static conflictResolve:State.Added}">
                                        <Setter Property="Background" Value="PaleGreen"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding State}" 
                                                 Value="{x:Static conflictResolve:State.Deleted}">
                                        <Setter Property="Background" Value="PaleVioletRed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding State}" 
                                                 Value="{x:Static conflictResolve:State.Modified}">
                                        <Setter Property="Background" Value="Yellow"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>-->
    </Grid>
</Page>
